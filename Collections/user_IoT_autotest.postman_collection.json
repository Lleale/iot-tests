{
	"info": {
		"_postman_id": "7483107a-0442-4585-91ea-71674ec70b02",
		"name": "Проверка работы платформы через интерфейс Пользователя",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36207140"
	},
	"item": [
		{
			"name": "Добавление пользователя",
			"item": [
				{
					"name": "Admin_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable (\"access_token\", pm.response.json().access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Have access_token in body\", function(){",
									"    pm.response.to.not.be.error;",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{admin_username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{admin_password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth2/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Have id in response\", function(){",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"let jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable (\"id_ab_test_1\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"\",\n    \"username\": \"ab_test_1\",\n    \"emailConfirm\": false,\n    \"phoneConfirm\": false,\n    \"surname\": \"Smith\",\n    \"name\": \"Alex\",\n    \"patronymic\": \"Joe\",\n    \"email\": \"ab_test_1@mail\",\n    \"phone\": \"\",\n    \"role\": \"user\",\n    \"roleId\": \"user\",\n    \"roleName\": \"\",\n    \"permissions\": [],\n    \"roleSettings\": {},\n    \"language\": \"ru\",\n    \"enabled\": true,\n    \"admin\": false,\n    \"houseIds\": [],\n    \"videoParameters\": null,\n    \"access\": {},\n    \"accessMap\": {},\n    \"ownedHouseIds\": [],\n    \"testModeEnabled\": false,\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "ab_test_1_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable (\"user_access_token\", pm.response.json().access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Have access_token in body\", function(){",
									"    pm.response.to.not.be.error;",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "ab_test_1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}/oauth2/token",
							"host": [
								"{{host}}"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Рабочий стол",
			"item": [
				{
					"name": "Add house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"variables\",",
									"        \"dashboardItems\",",
									"        \"houseGroups\",",
									"        \"guards\",",
									"        \"title\",",
									"        \"ownerId\",",
									"        \"address\",",
									"        \"apartment\",",
									"        \"timeZone\",",
									"        \"type\",",
									"        \"startTime\",",
									"        \"guardStatus\",",
									"        \"underGuard\",",
									"        \"controllers\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"variables\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"dashboardItems\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"houseGroups\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"guards\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"ownerId\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"address\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"apartment\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"timeZone\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"startTime\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"guardStatus\": {",
									"            \"type\": [\"null\", \"string\"]",
									"        },",
									"        \"underGuard\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"controllers\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"})",
									"",
									"pm.environment.set(\"house_id\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test_home\",\n    \"type\": \"HOUSE\",\n    \"address\": \"test_street\",\n    \"apartment\": \"100\",\n    \"timeZone\": \"Asia/Novosibirsk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check adding house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"required\": [",
									"            \"id\",",
									"            \"variables\",",
									"            \"dashboardItems\",",
									"            \"houseGroups\",",
									"            \"guards\",",
									"            \"title\",",
									"            \"ownerId\",",
									"            \"address\",",
									"            \"apartment\",",
									"            \"timeZone\",",
									"            \"type\",",
									"            \"startTime\",",
									"            \"guardStatus\",",
									"            \"underGuard\",",
									"            \"controllers\"",
									"        ],",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"variables\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"required\": [",
									"                        \"id\",",
									"                        \"value\",",
									"                        \"title\",",
									"                        \"type\",",
									"                        \"system\",",
									"                        \"showInHeader\",",
									"                        \"enumValues\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"id\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"value\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"title\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"type\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"system\": {",
									"                            \"type\": \"boolean\"",
									"                        },",
									"                        \"showInHeader\": {",
									"                            \"type\": \"boolean\"",
									"                        },",
									"                        \"enumValues\": {",
									"                            \"type\": \"array\",",
									"                            \"items\": {",
									"                                \"type\": \"object\",",
									"                                \"required\": [",
									"                                    \"id\",",
									"                                    \"title\",",
									"                                    \"system\"",
									"                                ],",
									"                                \"properties\": {",
									"                                    \"id\": {",
									"                                        \"type\": \"string\"",
									"                                    },",
									"                                    \"title\": {",
									"                                        \"type\": \"string\"",
									"                                    },",
									"                                    \"system\": {",
									"                                        \"type\": \"boolean\"",
									"                                    }",
									"                                }",
									"                            }",
									"                        }",
									"                    }",
									"                }",
									"            },",
									"            \"dashboardItems\": {",
									"                \"type\": \"array\",",
									"                \"items\": {}",
									"            },",
									"            \"houseGroups\": {",
									"                \"type\": \"array\",",
									"                \"items\": {}",
									"            },",
									"            \"guards\": {",
									"                \"type\": \"array\",",
									"                \"items\": {}",
									"            },",
									"            \"title\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"ownerId\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"address\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"apartment\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"timeZone\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"type\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"startTime\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"guardStatus\": {",
									"                \"type\": \"null\"",
									"            },",
									"            \"underGuard\": {",
									"                \"type\": \"boolean\"",
									"            },",
									"            \"controllers\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"required\": [",
									"                        \"id\",",
									"                        \"title\",",
									"                        \"typeController\",",
									"                        \"status\",",
									"                        \"virtual\",",
									"                        \"devices\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"id\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"title\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"typeController\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"status\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"virtual\": {",
									"                            \"type\": \"boolean\"",
									"                        },",
									"                        \"devices\": {",
									"                            \"type\": \"array\",",
									"                            \"items\": {}",
									"                        }",
									"                    }",
									"                }",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"})",
									"",
									"pm.test(\"Check that added house shown on dashboard\", () => {",
									"    for (let i in pm.response.json()){",
									"        pm.expect(pm.response.json()[i].id === pm.environment.get(\"house_id\")).to.be.true;",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Управление домами",
			"item": [
				{
					"name": "Add house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"variables\",",
									"        \"dashboardItems\",",
									"        \"houseGroups\",",
									"        \"guards\",",
									"        \"title\",",
									"        \"ownerId\",",
									"        \"address\",",
									"        \"apartment\",",
									"        \"timeZone\",",
									"        \"type\",",
									"        \"startTime\",",
									"        \"guardStatus\",",
									"        \"underGuard\",",
									"        \"controllers\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"variables\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"dashboardItems\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"houseGroups\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"guards\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"ownerId\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"address\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"apartment\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"timeZone\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"startTime\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"guardStatus\": {",
									"            \"type\": [\"null\", \"string\"]",
									"        },",
									"        \"underGuard\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"controllers\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"})",
									"",
									"pm.environment.set(\"house_id\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test_home\",\n    \"type\": \"HOUSE\",\n    \"address\": \"test_street\",\n    \"apartment\": \"100\",\n    \"timeZone\": \"Asia/Novosibirsk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check adding house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"variables\",",
									"        \"dashboardItems\",",
									"        \"houseGroups\",",
									"        \"guards\",",
									"        \"title\",",
									"        \"ownerId\",",
									"        \"address\",",
									"        \"apartment\",",
									"        \"timeZone\",",
									"        \"type\",",
									"        \"startTime\",",
									"        \"guardStatus\",",
									"        \"underGuard\",",
									"        \"controllers\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"variables\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"value\",",
									"                    \"title\",",
									"                    \"type\",",
									"                    \"system\",",
									"                    \"showInHeader\",",
									"                    \"enumValues\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"value\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"type\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"system\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"showInHeader\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"enumValues\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {",
									"                            \"type\": \"object\",",
									"                            \"required\": [",
									"                                \"id\",",
									"                                \"title\",",
									"                                \"system\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"id\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"title\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"system\": {",
									"                                    \"type\": \"boolean\"",
									"                                }",
									"                            }",
									"                        }",
									"                    }",
									"                }",
									"            }",
									"        },",
									"        \"dashboardItems\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"houseGroups\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"guards\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"ownerId\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"address\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"apartment\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"timeZone\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"startTime\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"guardStatus\": {",
									"            \"type\": \"null\"",
									"        },",
									"        \"underGuard\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"controllers\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"houseId\",",
									"                    \"typeController\",",
									"                    \"virtual\",",
									"                    \"status\",",
									"                    \"title\",",
									"                    \"ipAddress\",",
									"                    \"lastActivity\",",
									"                    \"additionalInfo\",",
									"                    \"settings\",",
									"                    \"houseAddress\",",
									"                    \"houseApartment\",",
									"                    \"devices\",",
									"                    \"nodeIds\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"houseId\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"typeController\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"virtual\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"status\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"ipAddress\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"lastActivity\": {",
									"                        \"type\": \"null\"",
									"                    },",
									"                    \"additionalInfo\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [],",
									"                        \"properties\": {}",
									"                    },",
									"                    \"settings\": {",
									"                        \"type\": \"object\",",
									"                        \"properties\": {",
									"                            \"deviceIndexGenerator\": {",
									"                                \"type\": \"object\",",
									"                                \"required\": [],",
									"                                \"properties\": {}",
									"                            }",
									"                        }",
									"                    },",
									"                    \"houseAddress\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"houseApartment\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"devices\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [],",
									"                        \"properties\": {}",
									"                    },",
									"                    \"nodeIds\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {}",
									"                    }",
									"                }",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"});",
									"",
									"pm.test(\"Check that house is added\", () => {",
									"    pm.expect(pm.response.json().id === pm.environment.get(\"house_id\")).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test_home\",\n    \"type\": \"HOUSE\",\n    \"address\": \"test_street_new\",\n    \"apartment\": \"100\",\n    \"timeZone\": \"Asia/Novosibirsk\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check edit house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"variables\",",
									"        \"dashboardItems\",",
									"        \"houseGroups\",",
									"        \"guards\",",
									"        \"title\",",
									"        \"ownerId\",",
									"        \"address\",",
									"        \"apartment\",",
									"        \"timeZone\",",
									"        \"type\",",
									"        \"startTime\",",
									"        \"guardStatus\",",
									"        \"underGuard\",",
									"        \"controllers\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"variables\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"value\",",
									"                    \"title\",",
									"                    \"type\",",
									"                    \"system\",",
									"                    \"showInHeader\",",
									"                    \"enumValues\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"value\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"type\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"system\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"showInHeader\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"enumValues\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {",
									"                            \"type\": \"object\",",
									"                            \"required\": [",
									"                                \"id\",",
									"                                \"title\",",
									"                                \"system\"",
									"                            ],",
									"                            \"properties\": {",
									"                                \"id\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"title\": {",
									"                                    \"type\": \"string\"",
									"                                },",
									"                                \"system\": {",
									"                                    \"type\": \"boolean\"",
									"                                }",
									"                            }",
									"                        }",
									"                    }",
									"                }",
									"            }",
									"        },",
									"        \"dashboardItems\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"houseGroups\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"guards\": {",
									"            \"type\": \"array\",",
									"            \"items\": {}",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"ownerId\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"address\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"apartment\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"timeZone\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"startTime\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"guardStatus\": {",
									"            \"type\": \"null\"",
									"        },",
									"        \"underGuard\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"controllers\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"houseId\",",
									"                    \"typeController\",",
									"                    \"virtual\",",
									"                    \"status\",",
									"                    \"title\",",
									"                    \"ipAddress\",",
									"                    \"lastActivity\",",
									"                    \"additionalInfo\",",
									"                    \"settings\",",
									"                    \"houseAddress\",",
									"                    \"houseApartment\",",
									"                    \"devices\",",
									"                    \"nodeIds\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"houseId\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"typeController\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"virtual\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"status\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"ipAddress\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"lastActivity\": {",
									"                        \"type\": \"null\"",
									"                    },",
									"                    \"additionalInfo\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [],",
									"                        \"properties\": {}",
									"                    },",
									"                    \"settings\": {",
									"                        \"type\": \"object\",",
									"                        \"properties\": {",
									"                            \"deviceIndexGenerator\": {",
									"                                \"type\": \"object\",",
									"                                \"required\": [],",
									"                                \"properties\": {}",
									"                            }",
									"                        }",
									"                    },",
									"                    \"houseAddress\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"houseApartment\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"devices\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [],",
									"                        \"properties\": {}",
									"                    },",
									"                    \"nodeIds\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {}",
									"                    }",
									"                }",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"})",
									"",
									"pm.test(\"Check that house is editted\", () => {",
									"    pm.expect(pm.response.json().address).to.eql(\"test_street_new\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Проверка добавления хаба",
			"item": [
				{
					"name": "Инициализация",
					"item": [
						{
							"name": "Hub config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Settings confirmed\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 400])",
											"    if(pm.response.code == 400) {",
											"        pm.expect(pm.response.text()).to.include(\"connected\");",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mac\": \"{{zway_simulate_mac}}\",\n    \"serial\": \"ZWS0000000\",\n    \"version\": \"1.0.0\",\n    \"model\": \"Z-Wave Simulator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/ctl/info",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"ctl",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Platform info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sdk = require('postman-collection');",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set (\"ctl_port\", pm.response.json().ctlGatePort)",
											"pm.environment.set (\"ctl_host\", new sdk.Url(pm.globals.get(\"host\")).getHost())"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"postman.setEnvironmentVariable (\"current_time\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/info",
									"host": [
										"{{host}}"
									],
									"path": [
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Connect hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
											"});",
											"// Чтобы платформа успела принять подключение контроллера",
											"setTimeout(function(){}, [200]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"postman.setEnvironmentVariable (\"current_time\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"{{ctl_host}}\",\n    \"port\": {{ctl_port}},\n    \"type\": \"o7\",\n    \"allowMultiple\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/ctl/connect",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"ctl",
										"connect"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Добавление хаба",
					"item": [
						{
							"name": "Add house",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"variables\",",
											"        \"dashboardItems\",",
											"        \"houseGroups\",",
											"        \"guards\",",
											"        \"title\",",
											"        \"ownerId\",",
											"        \"address\",",
											"        \"apartment\",",
											"        \"timeZone\",",
											"        \"type\",",
											"        \"startTime\",",
											"        \"guardStatus\",",
											"        \"underGuard\",",
											"        \"controllers\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"variables\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        },",
											"        \"dashboardItems\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        },",
											"        \"houseGroups\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        },",
											"        \"guards\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        },",
											"        \"title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"ownerId\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"address\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"apartment\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"timeZone\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"startTime\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"guardStatus\": {",
											"            \"type\": [\"null\", \"string\"]",
											"        },",
											"        \"underGuard\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"controllers\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"})",
											"",
											"pm.environment.set(\"house_id\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"test_home\",\n    \"type\": \"HOUSE\",\n    \"address\": \"test_street\",\n    \"apartment\": \"100\",\n    \"timeZone\": \"Asia/Novosibirsk\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"houseId\",",
											"        \"typeController\",",
											"        \"virtual\",",
											"        \"status\",",
											"        \"title\",",
											"        \"ipAddress\",",
											"        \"lastActivity\",",
											"        \"additionalInfo\",",
											"        \"settings\",",
											"        \"houseAddress\",",
											"        \"houseApartment\",",
											"        \"devices\",",
											"        \"nodeIds\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"houseId\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"typeController\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"virtual\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"status\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"ipAddress\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"lastActivity\": {",
											"            \"type\": \"number\"",
											"        },",
											"        \"additionalInfo\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"zwaveSubModule\",",
											"                \"model\",",
											"                \"softwareVersion\",",
											"                \"vendor\",",
											"                \"mac\",",
											"                \"serial\",",
											"                \"controllerModel\",",
											"                \"zWaveSubModule\",",
											"                \"sdkSubVersion\"",
											"            ],",
											"            \"properties\": {",
											"                \"zwaveSubModule\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"model\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"softwareVersion\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"vendor\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"mac\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"serial\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"controllerModel\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"zWaveSubModule\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"sdkSubVersion\": {",
											"                    \"type\": \"string\"",
											"                }",
											"            }",
											"        },",
											"        \"settings\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"homeId\",",
											"                \"capabilities\",",
											"                \"provisioningList\"",
											"            ],",
											"            \"properties\": {",
											"                \"homeId\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"capabilities\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                },",
											"                \"provisioningList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {}",
											"                }",
											"            }",
											"        },",
											"        \"houseAddress\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"houseApartment\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"devices\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {}",
											"        },",
											"        \"nodeIds\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});",
											"",
											"pm.environment.set(\"hub_id\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"houseId\": \"{{house_id}}\",\n    \"typeCtl\": \"Z_WAY\",\n    \"settings\": {\n        \"title\": \"ctr_test_1\",\n        \"ctlMac\": \"{{zway_simulate_mac}}\",\n        \"offline\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/ctl/add",
									"host": [
										"{{host}}"
									],
									"path": [
										"ctl",
										"add"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Проверка создания новых переменных",
			"item": [
				{
					"name": "Add variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have new variable\", () => {",
									"    pm.expect(pm.response.json().enumValues.some(value => value.title === \"В командировке\")).to.be.true;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"value\",",
									"        \"title\",",
									"        \"type\",",
									"        \"system\",",
									"        \"showInHeader\",",
									"        \"enumValues\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"value\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"system\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"showInHeader\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"enumValues\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"title\",",
									"                    \"system\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"system\": {",
									"                        \"type\": \"boolean\"",
									"                    }",
									"                }",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate json of response\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"houseMode\",\n    \"value\": \"atHome\",\n    \"title\": \"Режим\",\n    \"type\": \"ENUMERATION\",\n    \"system\": true,\n    \"showInHeader\": true,\n    \"enumValues\": [\n        {\n            \"id\": \"atHome\",\n            \"title\": \"Я дома\",\n            \"system\": true\n        },\n        {\n            \"id\": \"notAtHome\",\n            \"title\": \"Я не дома\",\n            \"system\": true\n        },\n        {\n            \"id\": \"onHoliday\",\n            \"title\": \"В отпуске\",\n            \"system\": true\n        },\n        {\n            \"id\": \"7anwsdtajzb\",\n            \"title\": \"В командировке\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/vars/houseMode",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"vars",
								"houseMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset list of variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"id\",",
									"        \"value\",",
									"        \"title\",",
									"        \"type\",",
									"        \"system\",",
									"        \"showInHeader\",",
									"        \"enumValues\"",
									"    ],",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"value\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"title\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"system\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"showInHeader\": {",
									"            \"type\": \"boolean\"",
									"        },",
									"        \"enumValues\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"title\",",
									"                    \"system\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"system\": {",
									"                        \"type\": \"boolean\"",
									"                    }",
									"                }",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate json of response\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"houseMode\",\n    \"value\": \"atHome\",\n    \"title\": \"Режим\",\n    \"type\": \"ENUMERATION\",\n    \"system\": true,\n    \"showInHeader\": true,\n    \"enumValues\": [\n        {\n            \"id\": \"atHome\",\n            \"title\": \"Я дома\",\n            \"system\": true\n        },\n        {\n            \"id\": \"notAtHome\",\n            \"title\": \"Я не дома\",\n            \"system\": true\n        },\n        {\n            \"id\": \"onHoliday\",\n            \"title\": \"В отпуске\",\n            \"system\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/vars/houseMode",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"vars",
								"houseMode"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Проверка добавления/настройки местоположения",
			"item": [
				{
					"name": "Add location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is plain text\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");",
									"});",
									"",
									"pm.environment.set(\"location_id\", pm.response.text());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Кухня\",\n    \"parentId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add child location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is plain text\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");",
									"});",
									"",
									"pm.environment.set(\"child_location_id\", pm.response.text());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Левый угол\",\n    \"parentId\": \"{{location_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit location name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Прихожая\",\n    \"parentId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all locations in house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"object\",",
									"        \"required\": [",
									"            \"id\",",
									"            \"houseId\",",
									"            \"title\",",
									"            \"parentId\",",
									"            \"plan\",",
									"            \"childList\",",
									"            \"deviceList\",",
									"            \"cameraList\"",
									"        ],",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"houseId\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"title\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"parentId\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"plan\": {",
									"                \"type\": \"null\"",
									"            },",
									"            \"childList\": {",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                    \"type\": \"object\",",
									"                    \"required\": [",
									"                        \"id\",",
									"                        \"houseId\",",
									"                        \"title\",",
									"                        \"parentId\",",
									"                        \"plan\",",
									"                        \"childList\",",
									"                        \"deviceList\",",
									"                        \"cameraList\"",
									"                    ],",
									"                    \"properties\": {",
									"                        \"id\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"houseId\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"title\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"parentId\": {",
									"                            \"type\": \"string\"",
									"                        },",
									"                        \"plan\": {",
									"                            \"type\": \"null\"",
									"                        },",
									"                        \"childList\": {",
									"                            \"type\": \"array\",",
									"                            \"items\": {}",
									"                        },",
									"                        \"deviceList\": {",
									"                            \"type\": \"array\",",
									"                            \"items\": {}",
									"                        },",
									"                        \"cameraList\": {",
									"                            \"type\": \"array\",",
									"                            \"items\": {}",
									"                        }",
									"                    }",
									"                }",
									"            },",
									"            \"deviceList\": {",
									"                \"type\": \"array\",",
									"                \"additionalItems\": true,",
									"                \"items\": {}",
									"            },",
									"            \"cameraList\": {",
									"                \"type\": \"array\",",
									"                \"additionalItems\": true,",
									"                \"items\": {}",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add schema to house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response have property imageId\",  () => {",
									"    pm.expect(pm.response.json()).to.have.property('imageId');",
									"    pm.expect(pm.response.json().imageId).to.string    ",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "form-data; name=\"image\"; filename=\"test_plan.jpg\"",
									"type": "file",
									"src": "postman-cloud:///1ef39066-ebaa-4f10-8175-7d6455114ace"
								}
							]
						},
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}/plan/images",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups",
								"{{location_id}}",
								"plan",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE schema from house",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}/plan/images",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups",
								"{{location_id}}",
								"plan",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}?checkEmptyGroups=true",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"groups",
								"{{location_id}}"
							],
							"query": [
								{
									"key": "checkEmptyGroups",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Сценарии",
			"item": [
				{
					"name": "Инициализация",
					"item": [
						{
							"name": "Add variable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Response have new variable\", () => {",
											"    pm.expect(pm.response.json().enumValues.some(value => value.title === \"В командировке\")).to.be.true;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"value\",",
											"        \"title\",",
											"        \"type\",",
											"        \"system\",",
											"        \"showInHeader\",",
											"        \"enumValues\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"value\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"system\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"showInHeader\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"enumValues\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"title\",",
											"                    \"system\"",
											"                ],",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"title\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"system\": {",
											"                        \"type\": \"boolean\"",
											"                    }",
											"                }",
											"            }",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate json of response\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"houseMode\",\n    \"value\": \"atHome\",\n    \"title\": \"Режим\",\n    \"type\": \"ENUMERATION\",\n    \"system\": true,\n    \"showInHeader\": true,\n    \"enumValues\": [\n        {\n            \"id\": \"atHome\",\n            \"title\": \"Я дома\",\n            \"system\": true\n        },\n        {\n            \"id\": \"notAtHome\",\n            \"title\": \"Я не дома\",\n            \"system\": true\n        },\n        {\n            \"id\": \"onHoliday\",\n            \"title\": \"В отпуске\",\n            \"system\": true\n        },\n        {\n            \"id\": \"7anwsdtajzb\",\n            \"title\": \"В командировке\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/vars/houseMode",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"vars",
										"houseMode"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add sz_wlk sensor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding sensor\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 400])",
											"    if(pm.response.code == 400) {",
											"        pm.expect(pm.response.text()).to.include(\"already exists\");",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"template\": \"sz_wlk\",\n    \"nodeId\": 9\n}\n// sz_air_htq01",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/devices/add",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"devices",
										"add"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Добавление сценария",
					"item": [
						{
							"name": "Add new script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Id in response\",  () => {",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"});",
											"",
											"pm.environment.set(\"script_id\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"test_script\",\n    \"enabled\": true,\n    \"actions\": [\n        {\n            \"type\": \"SEND_NOTIFICATION\",\n            \"data\": {\n                \"message\": \"Протечка\",\n                \"usersIds\": [],\n                \"importance\": \"ALARM\",\n                \"cameraData\": {\n                    \"cameraId\": \"\",\n                    \"includeLinks\": false\n                }\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/scripts",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"scripts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add rules for script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Id in response\",  () => {",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": \"true\",\n    \"conditions\": [\n        {\n            \"sourceType\": \"HOUSE_VARIABLE\",\n            \"comparison\": \"EQ\",\n            \"observableValue\": \"houseMode\",\n            \"targetValue\": \"7anwsdtajzb\"\n        },\n        {\n            \"sourceType\": \"DEVICE_PROPERTY\",\n            \"comparison\": \"EQ\",\n            \"observableValue\": {\n                \"controllerId\": \"1c3f4929-91b2-59e6-9dd7-4bbd187d8a07\",\n                \"nodeId\": \"ZWAVE_ELTEX_9\",\n                \"propertyId\": \"ZWAVE_ELTEX_9-000-flood-0\",\n                \"propertyKind\": \"LEAK\",\n                \"holdInterval\": null\n            },\n            \"targetValue\": \"true\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/scripts/{{script_id}}/rules",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"scripts",
										"{{script_id}}",
										"rules"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Remove script",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/houses/{{house_id}}/scripts/{{script_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"houses",
								"{{house_id}}",
								"scripts",
								"{{script_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove sz_wlk sensor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding sensor\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 400])",
									"    if(pm.response.code == 400) {",
									"        pm.expect(pm.response.text()).to.include(\"already exists\");",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{zway_ctl_host}}/devices/9",
							"host": [
								"{{zway_ctl_host}}"
							],
							"path": [
								"devices",
								"9"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Устройства",
			"item": [
				{
					"name": "Удаление хаба с платформы",
					"item": [
						{
							"name": "Отключение контроллера от платформы",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"postman.setEnvironmentVariable (\"current_time\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"{{ctl_host}}\",\n    \"port\": {{ctl_port}},\n    \"type\": \"o7\",\n    \"allowMultiple\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/ctl/disconnect",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"ctl",
										"disconnect"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get controller id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"type\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"total\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"houseId\",",
											"                    \"typeController\",",
											"                    \"virtual\",",
											"                    \"status\",",
											"                    \"title\",",
											"                    \"ipAddress\",",
											"                    \"lastActivity\",",
											"                    \"additionalInfo\",",
											"                    \"settings\",",
											"                    \"houseAddress\",",
											"                    \"houseApartment\",",
											"                    \"devices\",",
											"                    \"nodeIds\"",
											"                ],",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"houseId\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"typeController\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"virtual\": {",
											"                        \"type\": \"boolean\"",
											"                    },",
											"                    \"status\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"title\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"ipAddress\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"lastActivity\": {",
											"                        \"type\": \"number\"",
											"                    },",
											"                    \"additionalInfo\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [",
											"                            \"zwaveSubModule\",",
											"                            \"model\",",
											"                            \"softwareVersion\",",
											"                            \"vendor\",",
											"                            \"mac\",",
											"                            \"serial\",",
											"                            \"controllerModel\",",
											"                            \"zWaveSubModule\",",
											"                            \"sdkSubVersion\"",
											"                        ],",
											"                        \"properties\": {",
											"                            \"zwaveSubModule\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"model\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"softwareVersion\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"vendor\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"mac\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"serial\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"controllerModel\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"zWaveSubModule\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"sdkSubVersion\": {",
											"                                \"type\": \"string\"",
											"                            }",
											"                        }",
											"                    },",
											"                    \"settings\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [",
											"                            \"homeId\",",
											"                            \"capabilities\",",
											"                            \"provisioningList\"",
											"                        ],",
											"                        \"properties\": {",
											"                            \"homeId\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"capabilities\": {",
											"                                \"type\": \"array\",",
											"                                \"items\": {",
											"                                    \"type\": \"string\"",
											"                                }",
											"                            },",
											"                            \"provisioningList\": {",
											"                                \"type\": \"array\",",
											"                                \"items\": {}",
											"                            }",
											"                        }",
											"                    },",
											"                    \"houseAddress\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"houseApartment\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"devices\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [],",
											"                        \"properties\": {}",
											"                    },",
											"                    \"nodeIds\": {",
											"                        \"type\": \"array\",",
											"                        \"items\": {}",
											"                    }",
											"                }",
											"            }",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});",
											"",
											"",
											"pm.test(\"Correct not empty rsponse\", () => {",
											"    pm.expect(pm.response.json()).to.have.property(\"total\");",
											"    pm.expect(pm.response.json()).to.have.property(\"data\");",
											"    pm.expect(pm.response.json().total).to.eql(pm.response.json().data.length);",
											"});",
											"",
											"if (pm.response.json().total > 0){",
											"    pm.environment.set(\"ctl_id\", pm.response.json().data[0].id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/ctl?limit=50&offset=0",
									"host": [
										"{{host}}"
									],
									"path": [
										"ctl"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove controller",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Пользователь удален (код 204)\", function () {",
											"    pm.expect(pm.response.code).to.equal(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/ctl/{{ctl_id}}/remove",
									"host": [
										"{{host}}"
									],
									"path": [
										"ctl",
										"{{ctl_id}}",
										"remove"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Инициализация",
					"item": [
						{
							"name": "Hub config",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Settings confirmed\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 400])",
											"    if(pm.response.code == 400) {",
											"        pm.expect(pm.response.text()).to.include(\"connected\");",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mac\": \"{{zway_simulate_mac}}\",\n    \"serial\": \"ZWS0000000\",\n    \"version\": \"1.0.0\",\n    \"model\": \"Z-Wave Simulator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/ctl/info",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"ctl",
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Platform info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sdk = require('postman-collection');",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set (\"ctl_port\", pm.response.json().ctlGatePort)",
											"pm.environment.set (\"ctl_host\", new sdk.Url(pm.globals.get(\"host\")).getHost())"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"postman.setEnvironmentVariable (\"current_time\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/info",
									"host": [
										"{{host}}"
									],
									"path": [
										"info"
									]
								}
							},
							"response": []
						},
						{
							"name": "Connect hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
											"});",
											"// Чтобы платформа успела принять подключение контроллера",
											"setTimeout(function(){}, [200]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"postman.setEnvironmentVariable (\"current_time\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"{{ctl_host}}\",\n    \"port\": {{ctl_port}},\n    \"type\": \"o7\",\n    \"allowMultiple\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/ctl/connect",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"ctl",
										"connect"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Добавление хаба",
					"item": [
						{
							"name": "Add hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"houseId\",",
											"        \"typeController\",",
											"        \"virtual\",",
											"        \"status\",",
											"        \"title\",",
											"        \"ipAddress\",",
											"        \"lastActivity\",",
											"        \"additionalInfo\",",
											"        \"settings\",",
											"        \"houseAddress\",",
											"        \"houseApartment\",",
											"        \"devices\",",
											"        \"nodeIds\"",
											"    ],",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"houseId\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"typeController\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"virtual\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"status\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"ipAddress\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"lastActivity\": {",
											"            \"type\": \"number\"",
											"        },",
											"        \"additionalInfo\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"zwaveSubModule\",",
											"                \"model\",",
											"                \"softwareVersion\",",
											"                \"vendor\",",
											"                \"mac\",",
											"                \"serial\",",
											"                \"controllerModel\",",
											"                \"zWaveSubModule\",",
											"                \"sdkSubVersion\"",
											"            ],",
											"            \"properties\": {",
											"                \"zwaveSubModule\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"model\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"softwareVersion\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"vendor\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"mac\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"serial\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"controllerModel\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"zWaveSubModule\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"sdkSubVersion\": {",
											"                    \"type\": \"string\"",
											"                }",
											"            }",
											"        },",
											"        \"settings\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"homeId\",",
											"                \"capabilities\",",
											"                \"provisioningList\"",
											"            ],",
											"            \"properties\": {",
											"                \"homeId\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"capabilities\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                },",
											"                \"provisioningList\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {}",
											"                }",
											"            }",
											"        },",
											"        \"houseAddress\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"houseApartment\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"devices\": {",
											"            \"type\": \"object\",",
											"            \"required\": [],",
											"            \"properties\": {}",
											"        },",
											"        \"nodeIds\": {",
											"            \"type\": \"array\",",
											"            \"items\": {}",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});",
											"",
											"pm.environment.set(\"hub_id\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"houseId\": \"{{house_id}}\",\n    \"typeCtl\": \"Z_WAY\",\n    \"settings\": {\n        \"title\": \"ctr_test_1\",\n        \"ctlMac\": \"{{zway_simulate_mac}}\",\n        \"offline\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/ctl/add",
									"host": [
										"{{host}}"
									],
									"path": [
										"ctl",
										"add"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Добавление устройства",
					"item": [
						{
							"name": "Init adding device on platform",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"deviceType\":\"Z_WAY_DEVICE\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/ctl/{{ctl_id}}/devices/add",
									"host": [
										"{{host}}"
									],
									"path": [
										"ctl",
										"{{ctl_id}}",
										"devices",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create device in simulator",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Датчик присутствует\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 400])",
											"    if(pm.response.code == 400) {",
											"        pm.expect(pm.response.text()).to.include(\"already exists\");",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"template\": \"sz_wlk\",\n    \"nodeId\": 9\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/devices/add",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"devices",
										"add"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get added device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check adding device\",() => {",
											"  pm.expect(pm.response.json()[0].deviceType).to.eql(\"Z_WAY_DEVICE\");",
											"  pm.expect(pm.response.json()[0].controllerId).to.eql(pm.environment.get(\"ctl_id\"));",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [1000]);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/devices?withCameras=false",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"devices"
									],
									"query": [
										{
											"key": "withCameras",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "События",
			"item": [
				{
					"name": "Инициализация",
					"item": [
						{
							"name": "Add new script",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"pm.test(\"Id in response\",  () => {",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"});",
											"",
											"pm.environment.set(\"script_id\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"test_script\",\n    \"enabled\": true,\n    \"actions\": [\n        {\n            \"type\": \"SEND_NOTIFICATION\",\n            \"data\": {\n                \"message\": \"Протечка\",\n                \"usersIds\": [],\n                \"importance\": \"ALARM\",\n                \"cameraData\": {\n                    \"cameraId\": \"\",\n                    \"includeLinks\": false\n                }\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/scripts",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"scripts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add sz_wlk sensor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding sensor\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 400])",
											"    if(pm.response.code == 400) {",
											"        pm.expect(pm.response.text()).to.include(\"already exists\");",
											"    }",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"template\": \"sz_wlk\",\n    \"nodeId\": 9\n}\n// sz_air_htq01",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{zway_ctl_host}}/devices/add",
									"host": [
										"{{zway_ctl_host}}"
									],
									"path": [
										"devices",
										"add"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Проверка журнала событий",
					"item": [
						{
							"name": "Get all events log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"type\",",
											"        \"total\",",
											"        \"data\",",
											"        \"next_time_millis\",",
											"        \"next_offset\",",
											"        \"last_read_event_time_millis\"",
											"    ],",
											"    \"properties\": {",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"total\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"message\",",
											"                    \"level\",",
											"                    \"type\",",
											"                    \"icon_name\",",
											"                    \"origin_id\",",
											"                    \"origin_type\",",
											"                    \"created_at_millis\",",
											"                    \"house_id\",",
											"                    \"user_id\",",
											"                    \"links\",",
											"                    \"color\",",
											"                    \"section_type\",",
											"                    \"section_id\"",
											"                ],",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"message\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"level\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"icon_name\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"created_at_millis\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"house_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"user_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"links\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"color\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"section_type\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"section_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    }",
											"                }",
											"            }",
											"        },",
											"        \"next_time_millis\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"next_offset\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"last_read_event_time_millis\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/events/endless?limit=50&offset=0&language=ru",
									"host": [
										"{{host}}"
									],
									"path": [
										"events",
										"endless"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "language",
											"value": "ru"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get events for house",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"time_from\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"type\",",
											"        \"total\",",
											"        \"data\",",
											"        \"next_time_millis\",",
											"        \"next_offset\",",
											"        \"last_read_event_time_millis\"",
											"    ],",
											"    \"properties\": {",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"total\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"message\",",
											"                    \"level\",",
											"                    \"type\",",
											"                    \"icon_name\",",
											"                    \"origin_id\",",
											"                    \"origin_type\",",
											"                    \"created_at_millis\",",
											"                    \"house_id\",",
											"                    \"user_id\",",
											"                    \"links\",",
											"                    \"color\",",
											"                    \"section_type\",",
											"                    \"section_id\"",
											"                ],",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"message\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"level\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"icon_name\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"created_at_millis\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"house_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"user_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"links\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"color\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"section_type\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"section_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    }",
											"                }",
											"            }",
											"        },",
											"        \"next_time_millis\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"next_offset\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"last_read_event_time_millis\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"})",
											"",
											"pm.test(\"Response have only USER level events\", () => {",
											"    pm.expect(pm.response.json().data.all(value => value.house_id === pm.environment.get(\"house_id\"))).to.be.true;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/events/endless?limit=50&offset=0&fromMillis={{time_from}}&language=ru&houseId={{house_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"events",
										"endless"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "fromMillis",
											"value": "{{time_from}}"
										},
										{
											"key": "language",
											"value": "ru"
										},
										{
											"key": "houseId",
											"value": "{{house_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get events by house and user level",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"time_from\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"type\",",
											"        \"total\",",
											"        \"data\",",
											"        \"next_time_millis\",",
											"        \"next_offset\",",
											"        \"last_read_event_time_millis\"",
											"    ],",
											"    \"properties\": {",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"total\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"message\",",
											"                    \"level\",",
											"                    \"type\",",
											"                    \"icon_name\",",
											"                    \"origin_id\",",
											"                    \"origin_type\",",
											"                    \"created_at_millis\",",
											"                    \"house_id\",",
											"                    \"user_id\",",
											"                    \"links\",",
											"                    \"color\",",
											"                    \"section_type\",",
											"                    \"section_id\"",
											"                ],",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"message\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"level\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"icon_name\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"created_at_millis\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"house_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"user_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"links\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"color\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"section_type\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"section_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    }",
											"                }",
											"            }",
											"        },",
											"        \"next_time_millis\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"next_offset\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"last_read_event_time_millis\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"})",
											"",
											"pm.test(\"Response have only USER level events\", () => {",
											"    pm.expect(pm.response.json().data.all(value => value.level === \"USER\")).to.be.true;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/events/endless?limit=50&offset=0&fromMillis={{time_from}}&language=ru&houseId={{house_id}}&level=USER",
									"host": [
										"{{host}}"
									],
									"path": [
										"events",
										"endless"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "fromMillis",
											"value": "{{time_from}}"
										},
										{
											"key": "language",
											"value": "ru"
										},
										{
											"key": "houseId",
											"value": "{{house_id}}"
										},
										{
											"key": "level",
											"value": "USER"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get events by house and origin type",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"time_from\", Date.now());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"type\",",
											"        \"total\",",
											"        \"data\",",
											"        \"next_time_millis\",",
											"        \"next_offset\",",
											"        \"last_read_event_time_millis\"",
											"    ],",
											"    \"properties\": {",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"total\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"message\",",
											"                    \"level\",",
											"                    \"type\",",
											"                    \"icon_name\",",
											"                    \"origin_id\",",
											"                    \"origin_type\",",
											"                    \"created_at_millis\",",
											"                    \"house_id\",",
											"                    \"user_id\",",
											"                    \"links\",",
											"                    \"color\",",
											"                    \"section_type\",",
											"                    \"section_id\"",
											"                ],",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"message\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"level\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"icon_name\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"origin_type\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"created_at_millis\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"house_id\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"user_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"links\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"color\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"section_type\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    },",
											"                    \"section_id\": {",
											"                        \"type\": [",
											"                            \"null\",",
											"                            \"string\"",
											"                        ]",
											"                    }",
											"                }",
											"            }",
											"        },",
											"        \"next_time_millis\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"next_offset\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"last_read_event_time_millis\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"})",
											"",
											"pm.test(\"Response have only DEVICE type events\", () => {",
											"    pm.expect(pm.response.json().data.all(value => value.origin_type === \"DEVICE\")).to.be.true;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/events/endless?limit=50&offset=0&fromMillis={{time_from}}&language=ru&houseId={{house_id}}&originType=DEVICE",
									"host": [
										"{{host}}"
									],
									"path": [
										"events",
										"endless"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "fromMillis",
											"value": "{{time_from}}"
										},
										{
											"key": "language",
											"value": "ru"
										},
										{
											"key": "houseId",
											"value": "{{house_id}}"
										},
										{
											"key": "originType",
											"value": "DEVICE"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Настройки",
			"item": [
				{
					"name": "Проверка настроек уведомлений",
					"item": [
						{
							"name": "Get user settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"additionalSettings\",",
											"        \"baseSettings\",",
											"        \"byPush\",",
											"        \"bySms\",",
											"        \"byEmail\"",
											"    ],",
											"    \"properties\": {",
											"        \"additionalSettings\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"byHouseVariable\",",
											"                \"valuesHouseVariable\",",
											"                \"mutedEmergencyPushCategories\",",
											"                \"byTime\",",
											"                \"startTime\",",
											"                \"endTime\",",
											"                \"timeZone\"",
											"            ],",
											"            \"properties\": {",
											"                \"byHouseVariable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"valuesHouseVariable\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                },",
											"                \"mutedEmergencyPushCategories\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"byTime\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"startTime\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"endTime\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"timeZone\": {",
											"                    \"type\": \"null\"",
											"                }",
											"            }",
											"        },",
											"        \"baseSettings\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"email\",",
											"                \"sms\",",
											"                \"push\",",
											"                \"events\"",
											"            ],",
											"            \"properties\": {",
											"                \"email\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"loginUser\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"alarmChangedState\",",
											"                        \"technicalSupport\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"alarmChangedState\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"technicalSupport\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                },",
											"                \"sms\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"loginUser\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"alarmChangedState\",",
											"                        \"technicalSupport\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"alarmChangedState\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"technicalSupport\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                },",
											"                \"push\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"loginUser\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"alarmChangedState\",",
											"                        \"technicalSupport\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"alarmChangedState\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"technicalSupport\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                },",
											"                \"events\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"managementDevices\",",
											"                        \"loginUser\",",
											"                        \"managementUsers\",",
											"                        \"managementUserAccess\",",
											"                        \"managementHouses\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"workOfControllers\",",
											"                        \"workOfBackup\",",
											"                        \"dropController\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"statusesByCameras\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"managementDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementUsers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementUserAccess\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementHouses\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfBackup\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"dropController\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusesByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                }",
											"            }",
											"        },",
											"        \"byPush\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"bySms\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"byEmail\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});",
											"",
											"// pm.environment.set(\"user_settings\", JSON.stringify(pm.response.json()));"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/usersettings",
									"host": [
										"{{host}}"
									],
									"path": [
										"usersettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit user settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"additionalSettings\",",
											"        \"baseSettings\",",
											"        \"byPush\",",
											"        \"bySms\",",
											"        \"byEmail\"",
											"    ],",
											"    \"properties\": {",
											"        \"additionalSettings\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"byHouseVariable\",",
											"                \"valuesHouseVariable\",",
											"                \"mutedEmergencyPushCategories\",",
											"                \"byTime\",",
											"                \"startTime\",",
											"                \"endTime\",",
											"                \"timeZone\"",
											"            ],",
											"            \"properties\": {",
											"                \"byHouseVariable\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"valuesHouseVariable\": {",
											"                    \"type\": \"array\",",
											"                    \"items\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                },",
											"                \"mutedEmergencyPushCategories\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"byTime\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"startTime\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"endTime\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"timeZone\": {",
											"                    \"type\": \"null\"",
											"                }",
											"            }",
											"        },",
											"        \"baseSettings\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"email\",",
											"                \"sms\",",
											"                \"push\",",
											"                \"events\"",
											"            ],",
											"            \"properties\": {",
											"                \"email\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"loginUser\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"alarmChangedState\",",
											"                        \"technicalSupport\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"alarmChangedState\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"technicalSupport\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                },",
											"                \"sms\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"loginUser\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"alarmChangedState\",",
											"                        \"technicalSupport\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"alarmChangedState\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"technicalSupport\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                },",
											"                \"push\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"loginUser\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"alarmChangedState\",",
											"                        \"technicalSupport\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"alarmChangedState\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"technicalSupport\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                },",
											"                \"events\": {",
											"                    \"type\": \"object\",",
											"                    \"required\": [",
											"                        \"managementDevices\",",
											"                        \"loginUser\",",
											"                        \"managementUsers\",",
											"                        \"managementUserAccess\",",
											"                        \"managementHouses\",",
											"                        \"managementControllers\",",
											"                        \"houseVariableChange\",",
											"                        \"workOfControllers\",",
											"                        \"workOfBackup\",",
											"                        \"dropController\",",
											"                        \"statusOfDevices\",",
											"                        \"workOfDevices\",",
											"                        \"workOfScript\",",
											"                        \"criticalDevice\",",
											"                        \"criticalControllers\",",
											"                        \"infoGuardPanel\",",
											"                        \"criticalGuards\",",
											"                        \"detailGuardEvents\",",
											"                        \"guardEvents\",",
											"                        \"eventsByCameras\",",
											"                        \"statusesByCameras\",",
											"                        \"subscription\"",
											"                    ],",
											"                    \"properties\": {",
											"                        \"managementDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"loginUser\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementUsers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementUserAccess\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementHouses\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"managementControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"houseVariableChange\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfBackup\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"dropController\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfDevices\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"workOfScript\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalDevice\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalControllers\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"infoGuardPanel\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"criticalGuards\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"detailGuardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"guardEvents\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"eventsByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"statusesByCameras\": {",
											"                            \"type\": \"boolean\"",
											"                        },",
											"                        \"subscription\": {",
											"                            \"type\": \"boolean\"",
											"                        }",
											"                    }",
											"                }",
											"            }",
											"        },",
											"        \"byPush\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"bySms\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"byEmail\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});",
											"",
											"pm.test(\"Check editting settings\", () => {",
											"    pm.expect(pm.response.json().byPush).to.equal(true);",
											"    pm.expect(pm.response.json().bySms).to.equal(true);",
											"    pm.expect(pm.response.json().byEmail).to.equal(true);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"additionalSettings\": {\n        \"byHouseVariable\": false,\n        \"valuesHouseVariable\": [\n            \"atHome\",\n            \"notAtHome\",\n            \"onHoliday\"\n        ],\n        \"mutedEmergencyPushCategories\": null,\n        \"byTime\": false,\n        \"startTime\": null,\n        \"endTime\": null,\n        \"timeZone\": null\n    },\n    \"baseSettings\": {\n        \"email\": {\n            \"loginUser\": true,\n            \"managementControllers\": true,\n            \"houseVariableChange\": true,\n            \"statusOfDevices\": true,\n            \"workOfDevices\": true,\n            \"workOfScript\": true,\n            \"criticalDevice\": true,\n            \"criticalControllers\": true,\n            \"infoGuardPanel\": true,\n            \"criticalGuards\": true,\n            \"detailGuardEvents\": true,\n            \"guardEvents\": true,\n            \"eventsByCameras\": true,\n            \"alarmChangedState\": true,\n            \"technicalSupport\": true,\n            \"subscription\": true\n        },\n        \"sms\": {\n            \"loginUser\": true,\n            \"managementControllers\": true,\n            \"houseVariableChange\": true,\n            \"statusOfDevices\": true,\n            \"workOfDevices\": true,\n            \"workOfScript\": true,\n            \"criticalDevice\": true,\n            \"criticalControllers\": true,\n            \"infoGuardPanel\": true,\n            \"criticalGuards\": true,\n            \"detailGuardEvents\": true,\n            \"guardEvents\": true,\n            \"eventsByCameras\": true,\n            \"alarmChangedState\": true,\n            \"technicalSupport\": true,\n            \"subscription\": true\n        },\n        \"push\": {\n            \"loginUser\": true,\n            \"managementControllers\": true,\n            \"houseVariableChange\": true,\n            \"statusOfDevices\": true,\n            \"workOfDevices\": true,\n            \"workOfScript\": true,\n            \"criticalDevice\": true,\n            \"criticalControllers\": true,\n            \"infoGuardPanel\": true,\n            \"criticalGuards\": true,\n            \"detailGuardEvents\": true,\n            \"guardEvents\": true,\n            \"eventsByCameras\": true,\n            \"alarmChangedState\": true,\n            \"technicalSupport\": true,\n            \"subscription\": true\n        },\n        \"events\": {\n            \"managementDevices\": true,\n            \"loginUser\": true,\n            \"managementUsers\": true,\n            \"managementUserAccess\": true,\n            \"managementHouses\": true,\n            \"managementControllers\": true,\n            \"houseVariableChange\": true,\n            \"workOfControllers\": true,\n            \"workOfBackup\": true,\n            \"dropController\": true,\n            \"statusOfDevices\": true,\n            \"workOfDevices\": true,\n            \"workOfScript\": true,\n            \"criticalDevice\": true,\n            \"criticalControllers\": true,\n            \"infoGuardPanel\": true,\n            \"criticalGuards\": true,\n            \"detailGuardEvents\": true,\n            \"guardEvents\": true,\n            \"eventsByCameras\": true,\n            \"statusesByCameras\": true,\n            \"subscription\": true\n        }\n    },\n    \"byPush\": true,\n    \"bySms\": true,\n    \"byEmail\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/usersettings",
									"host": [
										"{{host}}"
									],
									"path": [
										"usersettings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Проверка смены пароля",
					"item": [
						{
							"name": "Change password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.environment.set(\"user_access_token\", pm.response.json().access_token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"d281f9fa-3870-4838-a300-c2a50df2db80\",\n    \"password\": \"Ab_test_1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/{{id_ab_test_1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"{{id_ab_test_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ab_test_1 auth new password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable (\"user_access_token\", pm.response.json().access_token);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Have access_token in body\", function(){",
											"    pm.response.to.not.be.error;",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "ab_test_1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Ab_test_1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/oauth2/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Проверка завершения всех сеансов Copy",
					"item": [
						{
							"name": "ab_test_1 auth new password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable (\"user_access_token\", pm.response.json().access_token);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Have access_token in body\", function(){",
											"    pm.response.to.not.be.error;",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "ab_test_1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Ab_test_1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/oauth2/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "ab_test_1 auth new password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable (\"user_access_token\", pm.response.json().access_token);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Have access_token in body\", function(){",
											"    pm.response.to.not.be.error;",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "ab_test_1",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Ab_test_1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/oauth2/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Have data in response, total equal real count of data elements\", () => {",
											"    pm.expect(pm.response.json()).to.have.property(\"total\");",
											"    pm.expect(pm.response.json()).to.have.property(\"data\");",
											"    pm.expect(pm.response.json().data.length).to.equal(pm.response.json().total);",
											"});",
											"",
											"pm.environment.set(\"count_sessions\", pm.response.json().total);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/login/info/current/user?clientIds=web-client,android-client,ios-client,android-counters,ios-counters,api-client&loggedIn=true&limit=50&offset=0",
									"host": [
										"{{host}}"
									],
									"path": [
										"login",
										"info",
										"current",
										"user"
									],
									"query": [
										{
											"key": "clientIds",
											"value": "web-client,android-client,ios-client,android-counters,ios-counters,api-client"
										},
										{
											"key": "loggedIn",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke all sessions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/oauth2/token/revoke/all?clientIds=",
									"host": [
										"{{host}}"
									],
									"path": [
										"oauth2",
										"token",
										"revoke",
										"all"
									],
									"query": [
										{
											"key": "clientIds",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all sessions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Have data in response, total equal real count of data elements\", () => {",
											"    pm.expect(pm.response.json()).to.have.property(\"total\");",
											"    pm.expect(pm.response.json()).to.have.property(\"data\");",
											"    pm.expect(pm.response.json().data.length).to.equal(pm.response.json().total);",
											"});",
											"",
											"pm.test(\"Extra sessions is revoked\", () => {",
											"    pm.expect(pm.response.json().total).to.lt(pm.environment.get(\"count_sessions\"));",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/login/info/current/user?clientIds=web-client,android-client,ios-client,android-counters,ios-counters,api-client&loggedIn=true&limit=50&offset=0",
									"host": [
										"{{host}}"
									],
									"path": [
										"login",
										"info",
										"current",
										"user"
									],
									"query": [
										{
											"key": "clientIds",
											"value": "web-client,android-client,ios-client,android-counters,ios-counters,api-client"
										},
										{
											"key": "loggedIn",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Планы помещений",
					"item": [
						{
							"name": "Add location",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is plain text\", () => {",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");",
											"});",
											"",
											"pm.environment.set(\"location_id\", pm.response.text());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Кухня\",\n    \"parentId\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add schema to house",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response have property imageId\",  () => {",
											"    pm.expect(pm.response.json()).to.have.property('imageId');",
											"    pm.expect(pm.response.json().imageId).to.string    ",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"description": "form-data; name=\"image\"; filename=\"test_plan.jpg\"",
											"type": "file",
											"src": "postman-cloud:///1ef39cdb-7946-4790-b8e7-b980351ac5d7"
										}
									]
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}/plan/images",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"groups",
										"{{location_id}}",
										"plan",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change device location",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", () => {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nodeId\": \"ZWAVE_ELTEX_9\",\n    \"title\": \"ZWAVE_ELTEX_9\",\n    \"deviceLocation\": [\n        \"{{location_id}}\"\n    ],\n    \"disabled\": false,\n    \"muted\": false,\n    \"networkAddress\": \"\",\n    \"password\": \"\",\n    \"serial\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/ctl/{{ctl_id}}/devices/ZWAVE_ELTEX_9",
									"host": [
										"{{host}}"
									],
									"path": [
										"ctl",
										"{{ctl_id}}",
										"devices",
										"ZWAVE_ELTEX_9"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get device id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"array\",",
											"    \"items\": {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"deviceType\",",
											"            \"houseId\",",
											"            \"nodeId\",",
											"            \"controllerId\",",
											"            \"title\",",
											"            \"muted\",",
											"            \"disabled\",",
											"            \"serial\",",
											"            \"status\",",
											"            \"deviceLocation\",",
											"            \"lastActivity\",",
											"            \"version\",",
											"            \"channels\",",
											"            \"actions\",",
											"            \"configs\",",
											"            \"settings\",",
											"            \"classType\"",
											"        ],",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"deviceType\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"houseId\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"nodeId\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"controllerId\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"muted\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"disabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"serial\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"status\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"deviceLocation\": {",
											"                \"type\": \"array\",",
											"                \"items\": {",
											"                    \"type\": \"string\"",
											"                }",
											"            },",
											"            \"lastActivity\": {",
											"                \"type\": \"number\"",
											"            },",
											"            \"version\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"channels\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"0\",",
											"                    \"1\"",
											"                ],",
											"                \"properties\": {",
											"                    \"0\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [",
											"                            \"title\",",
											"                            \"personal\",",
											"                            \"apartment\",",
											"                            \"individual\",",
											"                            \"deviceProperties\"",
											"                        ],",
											"                        \"properties\": {",
											"                            \"title\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"personal\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"apartment\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"individual\": {",
											"                                \"type\": \"boolean\"",
											"                            },",
											"                            \"deviceProperties\": {",
											"                                \"type\": \"array\",",
											"                                \"items\": {",
											"                                    \"type\": \"object\",",
											"                                    \"required\": [",
											"                                        \"id\",",
											"                                        \"kind\"",
											"                                    ],",
											"                                    \"properties\": {",
											"                                        \"id\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"kind\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"channelNumber\": {",
											"                                            \"type\": \"integer\"",
											"                                        },",
											"                                        \"className\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"dataStatus\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"modifiable\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"title\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"value\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"disabled\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"analytics\": {",
											"                                            \"type\": \"object\",",
											"                                            \"required\": [],",
											"                                            \"properties\": {}",
											"                                        },",
											"                                        \"eventsEnabled\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"hidden\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"valueLimits\": {",
											"                                            \"type\": \"object\",",
											"                                            \"required\": [",
											"                                                \"className\",",
											"                                                \"min\",",
											"                                                \"max\",",
											"                                                \"step\"",
											"                                            ],",
											"                                            \"properties\": {",
											"                                                \"className\": {",
											"                                                    \"type\": \"string\"",
											"                                                },",
											"                                                \"min\": {",
											"                                                    \"type\": \"string\"",
											"                                                },",
											"                                                \"max\": {",
											"                                                    \"type\": \"string\"",
											"                                                },",
											"                                                \"step\": {",
											"                                                    \"type\": \"string\"",
											"                                                }",
											"                                            }",
											"                                        }",
											"                                    }",
											"                                }",
											"                            }",
											"                        }",
											"                    },",
											"                    \"1\": {",
											"                        \"type\": \"object\",",
											"                        \"required\": [",
											"                            \"title\",",
											"                            \"personal\",",
											"                            \"apartment\",",
											"                            \"individual\",",
											"                            \"deviceProperties\"",
											"                        ],",
											"                        \"properties\": {",
											"                            \"title\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"personal\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"apartment\": {",
											"                                \"type\": \"string\"",
											"                            },",
											"                            \"individual\": {",
											"                                \"type\": \"boolean\"",
											"                            },",
											"                            \"deviceProperties\": {",
											"                                \"type\": \"array\",",
											"                                \"items\": {",
											"                                    \"type\": \"object\",",
											"                                    \"required\": [",
											"                                        \"id\",",
											"                                        \"kind\",",
											"                                        \"channelNumber\",",
											"                                        \"className\",",
											"                                        \"dataStatus\",",
											"                                        \"modifiable\",",
											"                                        \"title\",",
											"                                        \"value\",",
											"                                        \"disabled\",",
											"                                        \"analytics\",",
											"                                        \"eventsEnabled\",",
											"                                        \"hidden\"",
											"                                    ],",
											"                                    \"properties\": {",
											"                                        \"id\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"kind\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"channelNumber\": {",
											"                                            \"type\": \"integer\"",
											"                                        },",
											"                                        \"className\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"dataStatus\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"modifiable\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"title\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"value\": {",
											"                                            \"type\": \"string\"",
											"                                        },",
											"                                        \"disabled\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"analytics\": {",
											"                                            \"type\": \"object\",",
											"                                            \"required\": [],",
											"                                            \"properties\": {}",
											"                                        },",
											"                                        \"eventsEnabled\": {",
											"                                            \"type\": \"boolean\"",
											"                                        },",
											"                                        \"hidden\": {",
											"                                            \"type\": \"boolean\"",
											"                                        }",
											"                                    }",
											"                                }",
											"                            }",
											"                        }",
											"                    }",
											"                }",
											"            },",
											"            \"actions\": {",
											"                \"type\": \"object\",",
											"                \"required\": [],",
											"                \"properties\": {}",
											"            },",
											"            \"configs\": {",
											"                \"type\": \"array\",",
											"                \"items\": {}",
											"            },",
											"            \"settings\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"className\",",
											"                    \"manufacturerId\",",
											"                    \"productId\",",
											"                    \"productTypeId\",",
											"                    \"modelType\",",
											"                    \"securityScheme\",",
											"                    \"securityCapabilities\"",
											"                ],",
											"                \"properties\": {",
											"                    \"className\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"manufacturerId\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"productId\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"productTypeId\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"modelType\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"securityScheme\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"securityCapabilities\": {",
											"                        \"type\": \"array\",",
											"                        \"items\": {",
											"                            \"type\": \"string\"",
											"                        }",
											"                    }",
											"                }",
											"            },",
											"            \"classType\": {",
											"                \"type\": \"string\"",
											"            }",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});",
											"",
											"pm.environment.set(\"device_id\", pm.response.json()[0].id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/devices?withCameras=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"devices"
									],
									"query": [
										{
											"key": "withCameras",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set device location on schema",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that response is json object\", () => {",
											"    pm.response.to.be.json;",
											"});",
											"",
											"let valid = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"deviceId\",",
											"        \"color\",",
											"        \"position\"",
											"    ],",
											"    \"properties\": {",
											"        \"deviceId\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"color\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"position\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"x\",",
											"                \"y\"",
											"            ],",
											"            \"properties\": {",
											"                \"x\": {",
											"                    \"type\": \"number\"",
											"                },",
											"                \"y\": {",
											"                    \"type\": \"number\"",
											"                }",
											"            }",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate response json\", () => {",
											"    pm.response.to.have.jsonSchema(valid);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"cf6a430f-79f4-42e1-b3a0-e250a8b662cc\",\n    \"position\": {\n        \"x\": 5,\n        \"y\": 5\n    },\n    \"color\": \"rgb(226, 45, 132)\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}/plan/point/{{device_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"groups",
										"{{location_id}}",
										"plan",
										"point",
										"{{device_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change device location on schema",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{user_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"cf6a430f-79f4-42e1-b3a0-e250a8b662cc\",\n    \"position\": {\n        \"x\": 43.7162,\n        \"y\": 23.0514\n    },\n    \"color\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses/{{house_id}}/groups/{{location_id}}/plan/point/{{device_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses",
										"{{house_id}}",
										"groups",
										"{{location_id}}",
										"plan",
										"point",
										"{{device_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Удаление хаба с платформы",
			"item": [
				{
					"name": "Отключение контроллера от платформы",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"postman.setEnvironmentVariable (\"current_time\", Date.now());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"host\": \"{{ctl_host}}\",\n    \"port\": {{ctl_port}},\n    \"type\": \"o7\",\n    \"allowMultiple\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{zway_ctl_host}}/ctl/disconnect",
							"host": [
								"{{zway_ctl_host}}"
							],
							"path": [
								"ctl",
								"disconnect"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get controller id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check that response is json object\", () => {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"let valid = {",
									"    \"type\": \"object\",",
									"    \"required\": [",
									"        \"type\",",
									"        \"total\",",
									"        \"data\"",
									"    ],",
									"    \"properties\": {",
									"        \"type\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"total\": {",
									"            \"type\": \"integer\"",
									"        },",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"required\": [",
									"                    \"id\",",
									"                    \"houseId\",",
									"                    \"typeController\",",
									"                    \"virtual\",",
									"                    \"status\",",
									"                    \"title\",",
									"                    \"ipAddress\",",
									"                    \"lastActivity\",",
									"                    \"additionalInfo\",",
									"                    \"settings\",",
									"                    \"houseAddress\",",
									"                    \"houseApartment\",",
									"                    \"devices\",",
									"                    \"nodeIds\"",
									"                ],",
									"                \"properties\": {",
									"                    \"id\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"houseId\": {",
									"                        \"type\": [",
									"                            \"null\",",
									"                            \"string\"",
									"                        ]",
									"                    },",
									"                    \"typeController\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"virtual\": {",
									"                        \"type\": \"boolean\"",
									"                    },",
									"                    \"status\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"title\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"ipAddress\": {",
									"                        \"type\": \"string\"",
									"                    },",
									"                    \"lastActivity\": {",
									"                        \"type\": \"number\"",
									"                    },",
									"                    \"additionalInfo\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [",
									"                            \"zwaveSubModule\",",
									"                            \"model\",",
									"                            \"softwareVersion\",",
									"                            \"vendor\",",
									"                            \"mac\",",
									"                            \"serial\",",
									"                            \"controllerModel\",",
									"                            \"zWaveSubModule\",",
									"                            \"sdkSubVersion\"",
									"                        ],",
									"                        \"properties\": {",
									"                            \"zwaveSubModule\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"model\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"softwareVersion\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"vendor\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"mac\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"serial\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"controllerModel\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"zWaveSubModule\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"sdkSubVersion\": {",
									"                                \"type\": \"string\"",
									"                            }",
									"                        }",
									"                    },",
									"                    \"settings\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [",
									"                            \"homeId\",",
									"                            \"capabilities\",",
									"                            \"provisioningList\"",
									"                        ],",
									"                        \"properties\": {",
									"                            \"homeId\": {",
									"                                \"type\": \"string\"",
									"                            },",
									"                            \"capabilities\": {",
									"                                \"type\": \"array\",",
									"                                \"items\": {",
									"                                    \"type\": \"string\"",
									"                                }",
									"                            },",
									"                            \"provisioningList\": {",
									"                                \"type\": \"array\",",
									"                                \"items\": {}",
									"                            }",
									"                        }",
									"                    },",
									"                    \"houseAddress\": {",
									"                        \"type\": [",
									"                            \"null\",",
									"                            \"string\"",
									"                        ]",
									"                    },",
									"                    \"houseApartment\": {",
									"                        \"type\": [",
									"                            \"null\",",
									"                            \"string\"",
									"                        ]",
									"                    },",
									"                    \"devices\": {",
									"                        \"type\": \"object\",",
									"                        \"required\": [],",
									"                        \"properties\": {}",
									"                    },",
									"                    \"nodeIds\": {",
									"                        \"type\": \"array\",",
									"                        \"items\": {}",
									"                    }",
									"                }",
									"            }",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate response json\", () => {",
									"    pm.response.to.have.jsonSchema(valid);",
									"});",
									"",
									"",
									"pm.test(\"Correct not empty rsponse\", () => {",
									"    pm.expect(pm.response.json()).to.have.property(\"total\");",
									"    pm.expect(pm.response.json()).to.have.property(\"data\");",
									"    pm.expect(pm.response.json().total).to.eql(pm.response.json().data.length);",
									"});",
									"",
									"if (pm.response.json().total > 0){",
									"    pm.environment.set(\"ctl_id\", pm.response.json().data[0].id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/ctl?limit=50&offset=0",
							"host": [
								"{{host}}"
							],
							"path": [
								"ctl"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove controller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь удален (код 204)\", function () {",
									"    pm.expect(pm.response.code).to.equal(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/ctl/{{ctl_id}}/remove",
							"host": [
								"{{host}}"
							],
							"path": [
								"ctl",
								"{{ctl_id}}",
								"remove"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Remove user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Пользователь удален (код 204)\", function () {",
							"    pm.expect(pm.response.code).to.equal(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/users/{{id_ab_test_1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"{{id_ab_test_1}}"
					]
				}
			},
			"response": []
		}
	]
}