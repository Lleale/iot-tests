{
	"info": {
		"_postman_id": "aafe8718-6df1-403d-9eaf-849171a6db8f",
		"name": "Контроллер для работы с контроллерами",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Получение токена (для админа) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"var jsonData = JSON.parse(responseBody);",
							"pm.globals.set(\"ACCESS_TOKEN\", jsonData.access_token); ",
							"pm.globals.set (\"REFRESH_TOKEN\", jsonData.refresh_token); ",
							"pm.globals.set(\"ACCESS_TOKEN_EXPIRY\", jsonData.expires_in); ",
							"",
							"} ",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Test18plat34Form",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/oauth/token",
					"host": [
						"{{host}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение отфильтрованного списка контроллеров.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"    var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"required\": [",
							"        \"type\",",
							"        \"total\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"type\": {",
							"            \"$id\": \"#/properties/type\",",
							"            \"type\": \"string\"",
							"        },",
							"        \"total\": {",
							"            \"$id\": \"#/properties/total\",",
							"            \"type\": \"integer\"",
							"        },",
							"        \"data\": {",
							"            \"$id\": \"#/properties/data\",",
							"            \"type\": \"array\",",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/data/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/data/items/anyOf/0\",",
							"                        \"type\": \"object\",",
							"                        \"required\": [",
							"                            \"id\",",
							"                            \"houseId\",",
							"                            \"typeController\",",
							"                            \"virtual\",",
							"                            \"status\",",
							"                            \"title\",",
							"                            \"ipAddress\",",
							"                            \"lastActivity\",",
							"                            \"additionalInfo\",",
							"                            \"settings\",",
							"                            \"houseAddress\",",
							"                            \"houseApartment\",",
							"                            \"devices\",",
							"                            \"nodeIds\"",
							"                        ],",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/id\",",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"houseId\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/houseId\",",
							"                                \"type\": \"null\"",
							"                            },",
							"                            \"typeController\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/typeController\",",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"virtual\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/virtual\",",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"status\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/status\",",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"title\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/title\",",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"ipAddress\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/ipAddress\",",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"lastActivity\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/lastActivity\",",
							"                                \"type\": \"integer\"",
							"                            },",
							"                            \"additionalInfo\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo\",",
							"                                \"type\": \"object\",",
							"                                \"required\": [",
							"                                    \"zwaveSubModule\",",
							"                                    \"model\",",
							"                                    \"softwareVersion\",",
							"                                    \"vendor\",",
							"                                    \"mac\",",
							"                                    \"serial\",",
							"                                    \"controllerModel\",",
							"                                    \"zWaveSubModule\",",
							"                                    \"sdkSubVersion\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"zwaveSubModule\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/zwaveSubModule\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"model\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/model\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"softwareVersion\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/softwareVersion\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"vendor\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/vendor\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"mac\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/mac\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"serial\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/serial\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"controllerModel\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/controllerModel\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"zWaveSubModule\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/zWaveSubModule\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"sdkSubVersion\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/additionalInfo/properties/sdkSubVersion\",",
							"                                        \"type\": \"string\"",
							"                                    }",
							"                                },",
							"                                \"additionalProperties\": true",
							"                            },",
							"                            \"settings\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/settings\",",
							"                                \"type\": \"object\",",
							"                                \"required\": [",
							"                                    \"homeId\",",
							"                                    \"capabilities\",",
							"                                    \"provisioningList\",",
							"                                    \"nonSmartStartDskList\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"homeId\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/homeId\",",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"capabilities\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/capabilities\",",
							"                                        \"type\": \"array\",",
							"                                        \"additionalItems\": true,",
							"                                        \"items\": {",
							"                                            \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/capabilities/items\",",
							"                                            \"anyOf\": [",
							"                                                {",
							"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/capabilities/items/anyOf/0\",",
							"                                                    \"type\": \"string\"",
							"                                                }",
							"                                            ]",
							"                                        }",
							"                                    },",
							"                                    \"provisioningList\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/provisioningList\",",
							"                                        \"type\": \"array\",",
							"                                        \"additionalItems\": true,",
							"                                        \"items\": {",
							"                                            \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/provisioningList/items\"",
							"                                        }",
							"                                    },",
							"                                    \"nonSmartStartDskList\": {",
							"                                        \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/nonSmartStartDskList\",",
							"                                        \"type\": \"array\",",
							"                                        \"additionalItems\": true,",
							"                                        \"items\": {",
							"                                            \"$id\": \"#/properties/data/items/anyOf/0/properties/settings/properties/nonSmartStartDskList/items\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"additionalProperties\": true",
							"                            },",
							"                            \"houseAddress\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/houseAddress\",",
							"                                \"type\": \"null\"",
							"                            },",
							"                            \"houseApartment\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/houseApartment\",",
							"                                \"type\": \"null\"",
							"                            },",
							"                            \"devices\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/devices\",",
							"                                \"type\": \"object\",",
							"                                \"required\": [],",
							"                                \"additionalProperties\": true",
							"                            },",
							"                            \"nodeIds\": {",
							"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/nodeIds\",",
							"                                \"type\": \"array\",",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/nodeIds/items\"",
							"                                }",
							"                            }",
							"                        },",
							"                        \"additionalProperties\": true",
							"                    }",
							"                ]",
							"            }",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"    };",
							"",
							"   pm.test('Schema is valid', function () {",
							"        var JsoneData=JSON.parse(responseBody);",
							"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
							"    });",
							"",
							"    pm.test(\"The data is correct\",  () => {",
							"        var i = 0;",
							"        while (i < pm.response.json().data.length){",
							"            if (pm.response.json().data[i].title.indexOf('RG-35-WZ') != -1){",
							"                pm.expect(pm.response.json().data[i].title).to.equal('RG-35-WZ');",
							"                pm.expect(pm.response.json().data[i].additionalInfo.mac.toUpperCase()).to.equal(pm.globals.get(\"RG-35-WZ_mac\").toUpperCase());",
							"            };",
							"            i++;",
							"        };",
							"        ",
							"    });",
							"",
							"",
							"",
							"} ",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/ctl?includeVirtual=true&limit=20&offset=0",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl"
					],
					"query": [
						{
							"key": "includeVirtual",
							"value": "true"
						},
						{
							"key": "limit",
							"value": "20"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "создать пользователя (user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable (\"id1\", jsonData.id);",
							"pm.test(\"Status is ok, response is json\", function () {",
							"      pm.response.to.be.json; // проверка формата",
							"});",
							"pm.test(\"The data is correct\",  () => {",
							"    pm.expect(pm.response.json()).to.have.property('id');",
							"    pm.expect(pm.response.json().id).to.string    ",
							"});",
							"",
							"} ",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"access\": {},\n    \"accessMap\": {},\n    \"additionalAccounts\": {},\n    \"additionalEmail\": [\n        \"string\"\n    ],\n    \"admin\": false,\n    \"dashboardItems\": [],\n    \"email\": \"string099@mail.ru\",\n    \"emailConfirm\": false,\n    \"enabled\": true,\n    \"externalUrl\": \"http://127.0.0.1:8074\",\n    \"houseIds\": [],\n    \"houseIdsWithRefuser\": [],\n    \"id\": \"\",\n    \"language\": \"ru\",\n    \"name\": \"1\",\n    \"password\": \"1\",\n    \"patronymic\": \"\",\n    \"permissions\": [\n        \"view.dashboard\",\n        \"view.houses\",\n        \"view.scripts\",\n        \"view.devices\",\n        \"view.meters\",\n        \"view.events\",\n        \"view.settings\",\n        \"view.calculation\",\n        \"view.cameras\",\n        \"view.plans\",\n        \"needAllMeasures\",\n        \"needHeaderVariablesEditor\",\n        \"needReportByAddresses\",\n        \"minimizeDeviceInfoIfCharts\",\n        \"needPersonalInformation\",\n        \"computeDefaultPage\",\n        \"camera_w\",\n        \"controller_w\",\n        \"device_w\",\n        \"house_w\",\n        \"script_w\"\n    ],\n    \"phone\": \"\",\n    \"phoneConfirm\": false,\n    \"platforms\": [],\n    \"role\": \"user\",\n    \"roleId\": \"user\",\n    \"roleName\": \"Абонент\",\n    \"roleSettings\": {\n        \"defaultPage\": \"view.dashboard\"\n    },\n    \"status\": \"DEFAULT\",\n    \"surname\": \"\",\n    \"username\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение токена (для абонента)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable (\"access_token\", jsonData.access_token);  //записываем в переменную access_token токен",
							"",
							"pm.test(\"Status is ok, response is json\", function () {",
							"      pm.response.to.be.json; // проверка формата",
							"});",
							"",
							"var schema = {",
							"\"required\": [",
							"        \"access_token\",",
							"        \"token_type\",",
							"        \"refresh_token\",",
							"        \"expires_in\",",
							"        \"scope\"",
							"    ],",
							"    \"properties\": {",
							"        \"access_token\": {",
							"            \"type\": \"string\",",
							"        },",
							"        \"token_type\": {",
							"            \"type\": \"string\",",
							"        },",
							"        \"refresh_token\": {",
							"            \"type\": \"string\",",
							"        },",
							"        \"expires_in\": {",
							"            \"type\": \"integer\",",
							"        },",
							"        \"scope\": {",
							"            \"type\": \"string\",",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"};",
							"pm.test('Schema is valid', function () {",
							"        var JsoneData=JSON.parse(responseBody);",
							"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
							"});",
							"",
							"} ",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic d2ViLWNsaWVudDpwYXNzd29yZA==",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "1",
							"type": "text"
						},
						{
							"key": "password",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/oauth/token",
					"host": [
						"{{host}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание дома",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"    pm.test(\"Status is ok, response is json\", function () {",
							"      pm.response.to.be.json; // проверка формата",
							"    });",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable (\"houseId\", jsonData.id);",
							"",
							"   var schema =  {",
							"       \"required\": [",
							"        \"id\",",
							"        \"variables\",",
							"        \"dashboardItems\",",
							"        \"houseGroups\",",
							"        \"guards\",",
							"        \"title\",",
							"        \"ownerId\",",
							"        \"address\",",
							"        \"apartment\",",
							"        \"language\",",
							"        \"timeZone\",",
							"        \"type\",",
							"        \"startTime\",",
							"        \"guardStatus\"",
							"    ],",
							"    \"properties\": {",
							"        \"id\": {",
							"            \"type\": \"string\",",
							"        },",
							"        \"variables\": {",
							"            \"type\": \"array\",",
							"        },",
							"        \"dashboardItems\": {",
							"            \"type\": \"array\",",
							"        },",
							"        \"houseGroups\": {",
							"            \"type\": \"array\",",
							"",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"anyOf\": [",
							"                    {",
							"                        \"type\": \"object\",",
							"",
							"                        \"required\": [",
							"                            \"id\",",
							"                            \"houseId\",",
							"                            \"title\",",
							"                            \"parentId\",",
							"                            \"plan\",",
							"                            \"childList\",",
							"                            \"deviceList\",",
							"                            \"cameraList\"",
							"                        ],",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\",",
							"    ",
							"                            },",
							"                            \"houseId\": {",
							"                                \"type\": \"string\",",
							"                            },",
							"                            \"title\": {",
							"                                \"type\": \"string\",",
							"",
							"                            },",
							"                            \"parentId\": {",
							"                                \"type\": \"string\",",
							"",
							"                            },",
							"                            \"plan\": {",
							"                                \"type\": \"object\",",
							"",
							"                                \"required\": [",
							"                                    \"id\",",
							"                                    \"imageId\",",
							"                                    \"zones\",",
							"                                    \"points\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"id\": {",
							"                                        \"type\": \"string\",",
							"",
							"                                    },",
							"                                    \"imageId\": {",
							"                                        \"type\": \"string\",",
							"",
							"                                    },",
							"                                    \"zones\": {",
							"                                        \"type\": \"object\",",
							"",
							"                                        \"required\": [],",
							"                                        \"additionalProperties\": true",
							"                                    },",
							"                                    \"points\": {",
							"                                        \"type\": \"object\",",
							"",
							"                                        \"required\": [],",
							"                                        \"additionalProperties\": true",
							"                                    }",
							"                                },",
							"                                \"additionalProperties\": true",
							"                            },",
							"                            \"childList\": {",
							"                                \"type\": \"array\",",
							"",
							"                                \"additionalItems\": true,",
							"",
							"                            },",
							"                            \"deviceList\": {",
							"                                \"type\": \"array\",",
							"",
							"                            },",
							"                            \"cameraList\": {",
							"                                \"type\": \"array\",",
							"",
							"                            }",
							"                        },",
							"                        \"additionalProperties\": true",
							"                    }",
							"                ]",
							"            }",
							"        },",
							"        \"guards\": {",
							"            \"type\": \"array\",",
							"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"ownerId\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"address\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"apartment\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"language\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"timeZone\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"type\": {",
							"            \"type\": \"string\",",
							"",
							"        },",
							"        \"startTime\": {",
							"            \"type\": \"integer\",",
							"",
							"        },",
							"        \"guardStatus\": {",
							"           ",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"",
							"",
							"",
							"    pm.test('Schema is valid', function () {",
							"        var JsoneData=JSON.parse(responseBody);",
							"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
							"    });",
							"",
							"",
							"}",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"1\",\n    \"type\": \"HOUSE\",\n    \"address\": \"1\",\n    \"apartment\": \"1\",\n    \"timeZone\": \"Asia/Krasnoyarsk\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/houses",
					"host": [
						"{{host}}"
					],
					"path": [
						"houses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление контроллера. Возвращает id контроллера",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"postman.setEnvironmentVariable (\"ctl_id\", responseBody); ",
							"//setTimeout(function(){}, [400]);",
							"}",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"houseId\": \"{{houseId}}\",\n    \"typeCtl\": \"Z_WAY\",\n    \"settings\": {\n        \"title\": \"RG-35-WZ\",\n        \"ctlMac\": \"{{RG-35-WZ_mac}}\",\n        \"offline\": false\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/ctl",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить контроллер со списком девайсов.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"",
							"",
							"    pm.test(\"The data is correct\",  () => {",
							"        var i = 0;",
							"        while (i < pm.response.json().devices.length){",
							"            pm.expect(pm.response.json().devices[i].houseId).to.equal(pm.environment.get(\"houseId\"));",
							"            pm.expect(pm.response.json().devices[i].controllerId).to.equal(pm.environment.get(\"ctl_id\"));",
							"            i++;",
							"        };",
							"        ",
							"    });",
							"",
							"",
							"",
							"} ",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/ctl/{{ctl_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl",
						"{{ctl_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Перепривязка контроллера.",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{host}}/ctl/{{ctl_id}}/rebind?targetHouseId={{houseId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl",
						"{{ctl_id}}",
						"rebind"
					],
					"query": [
						{
							"key": "targetHouseId",
							"value": "{{houseId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Отвязывание/Удаление контроллера.",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/ctl/{{ctl_id}}/remove",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl",
						"{{ctl_id}}",
						"remove"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление контроллера.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable (\"ctl_id\", jsonData.id);",
							"pm.test(\"Status is ok, response is json\", function () {",
							"      pm.response.to.be.json; // проверка формата",
							"});",
							"pm.test(\"The data is correct\",  () => {",
							"    pm.expect(pm.response.json()).to.have.property('id');",
							"    pm.expect(pm.response.json().id).to.string    ",
							"});",
							"",
							"} ",
							"catch(e) {",
							"    // выводим исключение в консоль",
							"    console.log(e);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"houseId\": \"{{houseId}}\",\n    \"typeCtl\": \"Z_WAY\",\n    \"settings\": {\n        \"title\": \"RG-35-WZ\",\n        \"ctlMac\": \"{{RG-35-WZ_mac}}\",\n        \"offline\": false\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/ctl/add",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление контроллера.",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"98a2aba0-8dac-4ec0-8d00-24d80445a8de\",\n    \"houseId\": \"98a2aba0-8dac-4ec0-8d00-24d80445a8de\",\n    \"typeController\": \"Virtual\",\n    \"virtual\": true,\n    \"status\": \"CONNECTED\",\n    \"title\": \"Устройства \",\n    \"ipAddress\": \"localhost\",\n    \"lastActivity\": null,\n    \"additionalInfo\": {},\n    \"settings\": {},\n    \"houseAddress\": \"1\",\n    \"houseApartment\": \"1\",\n    \"devices\": {},\n    \"nodeIds\": []\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/ctl/98a2aba0-8dac-4ec0-8d00-24d80445a8de",
					"host": [
						"{{host}}"
					],
					"path": [
						"ctl",
						"98a2aba0-8dac-4ec0-8d00-24d80445a8de"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ACCESS_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Pre-request\");",
					"const value = (key, defaultVlue) => pm.globals.get(key) || defaultVlue;",
					"const setValue = (key, value) => pm.globals.set(key, value);",
					"const getTimeStamp = (expires_in = 0) => {",
					"    const expiryDate = new Date();",
					"    expiryDate.setSeconds(expiryDate.getSeconds() + expires_in);",
					"    return expiryDate.getTime();",
					"}",
					"",
					"const sendRequest = (urlencoded) => {",
					"    const request = {",
					"        url: pm.globals.get(\"URL_token\"),",
					"",
					"        method: 'POST',",
					"        header: {",
					"            'contetn-type': 'application/x-www-form-urlencoded',",
					"            'Authorization': 'Basic d2ViLWNsaWVudDpwYXNzd29yZA=='",
					"        },",
					"        body: { mode: 'urlencoded', urlencoded }",
					"    };",
					"    pm.sendRequest(request, (err, res) => {",
					"        const { access_token, refresh_token, expires_in } = res.json();",
					"        setValue('ACCESS_TOKEN', access_token);",
					"        setValue('REFRESH_TOKEN', refresh_token);",
					"        setValue('ACCESS_TOKEN_EXPIRY', getTimeStamp(expires_in));",
					"    });",
					"}",
					"",
					"const sendLoginRequest = () => {",
					"    const username = pm.globals.get('AUTH_USERNAME') || 'admin';",
					"    const password = pm.globals.get('AUTH_PASSWORD') || 'Test18plat34Form';",
					"    console.log('Send login request');",
					"    sendRequest([",
					"        { key: 'grant_type', value: 'password' },",
					"        { key: 'username', value: username },",
					"        { key: 'password', value: password }",
					"    ]);",
					"}",
					"",
					"const sendRefreshTokenRequest = () => {",
					"    const refreshToken = value('REFRESH_TOKEN');",
					"    console.log('Send refresh token request');",
					"    sendRequest([",
					"        { key: 'grant_type', value: 'refresh_token' },",
					"        { key: 'refresh_token', value: refreshToken }",
					"    ]);",
					"}",
					"",
					"const token = value('ACCESS_TOKEN');",
					"const accessTokenExpiry = value('ACCESS_TOKEN_EXPIRY');",
					"",
					"if(!token) {",
					"    sendLoginRequest();",
					"}",
					" else if(accessTokenExpiry <= getTimeStamp()) {",
					"    sendRefreshTokenRequest();",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Successful request (checking the code)\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
					"});",
					"",
					"if ( pm.response.code == 401){",
					" var schema = { \"required\": [",
					"        \"error\",",
					"        \"error_description\"",
					"    ],",
					"    \"properties\": {",
					"        \"error\": {",
					"            \"$id\": \"#/properties/error\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The error schema\",",
					"            \"description\": \"An explanation about the purpose of this instance.\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"                \"unauthorized\"",
					"            ]",
					"        },",
					"        \"error_description\": {",
					"            \"$id\": \"#/properties/error_description\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The error_description schema\",",
					"            \"description\": \"An explanation about the purpose of this instance.\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"                \"Full authentication is required to access this resource\"",
					"            ]",
					"        }",
					"    },",
					"    \"additionalProperties\": true",
					"}",
					"",
					"    pm.test('The response scheme for error (401) is valid', function () {",
					"        var JsoneData=JSON.parse(responseBody);",
					"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
					"    });",
					"",
					"}",
					"",
					"if ( pm.response.code == 400){",
					" var schema = {    ",
					"    \"required\": [",
					"        \"message\",",
					"        \"errors\"",
					"    ],",
					"    \"properties\": {",
					"        \"message\": {",
					"            \"$id\": \"#/properties/message\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The message schema\",",
					"            \"description\": \"An explanation about the purpose of this instance.\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"                \"[[\\\"Cannot create user: User 'qwert' already exists.\\\"]]\"",
					"            ]",
					"        },",
					"        \"errors\": {",
					"            \"$id\": \"#/properties/errors\",",
					"            \"type\": \"array\",",
					"            \"title\": \"The errors schema\",",
					"            \"description\": \"An explanation about the purpose of this instance.\",",
					"            \"default\": [],",
					"            \"examples\": [",
					"                [",
					"                    {",
					"                        \"path\": \"username\",",
					"                        \"errorCode\": \"CreateUserAlreadyExists\",",
					"                        \"value\": \"qwert\"",
					"                    }",
					"                ]",
					"            ],",
					"            \"additionalItems\": true,",
					"            \"items\": {",
					"                \"$id\": \"#/properties/errors/items\",",
					"                \"anyOf\": [",
					"                    {",
					"                        \"$id\": \"#/properties/errors/items/anyOf/0\",",
					"                        \"type\": \"object\",",
					"                        \"title\": \"The first anyOf schema\",",
					"                        \"description\": \"An explanation about the purpose of this instance.\",",
					"                        \"default\": {},",
					"                        \"examples\": [",
					"                            {",
					"                                \"path\": \"username\",",
					"                                \"errorCode\": \"CreateUserAlreadyExists\",",
					"                                \"value\": \"qwert\"",
					"                            }",
					"                        ],",
					"                        \"required\": [",
					"                            \"path\",",
					"                            \"errorCode\",",
					"                            \"value\"",
					"                        ],",
					"                        \"properties\": {",
					"                            \"path\": {",
					"                                \"$id\": \"#/properties/errors/items/anyOf/0/properties/path\",",
					"                                \"type\": \"string\",",
					"                                \"title\": \"The path schema\",",
					"                                \"description\": \"An explanation about the purpose of this instance.\",",
					"                                \"default\": \"\",",
					"                                \"examples\": [",
					"                                    \"username\"",
					"                                ]",
					"                            },",
					"                            \"errorCode\": {",
					"                                \"$id\": \"#/properties/errors/items/anyOf/0/properties/errorCode\",",
					"                                \"type\": \"string\",",
					"                                \"title\": \"The errorCode schema\",",
					"                                \"description\": \"An explanation about the purpose of this instance.\",",
					"                                \"default\": \"\",",
					"                                \"examples\": [",
					"                                    \"CreateUserAlreadyExists\"",
					"                                ]",
					"                            },",
					"                            \"value\": {",
					"                                \"$id\": \"#/properties/errors/items/anyOf/0/properties/value\",",
					"                                \"type\": \"string\",",
					"                                \"title\": \"The value schema\",",
					"                                \"description\": \"An explanation about the purpose of this instance.\",",
					"                                \"default\": \"\",",
					"                                \"examples\": [",
					"                                    \"qwert\"",
					"                                ]",
					"                            }",
					"                        },",
					"                        \"additionalProperties\": true",
					"                    }",
					"                ]",
					"            }",
					"        }",
					"    },",
					"    \"additionalProperties\": true",
					"}",
					"",
					"    pm.test('The response scheme for error (400) is valid', function () {",
					"        var JsoneData=JSON.parse(responseBody);",
					"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
					"    });",
					"};",
					"",
					"if ( pm.response.code == 404){",
					" var schema = {  ",
					"\"required\": [",
					"        \"message\"",
					"    ],",
					"    \"properties\": {",
					"        \"message\": {",
					"            \"$id\": \"#/properties/message\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The message schema\",",
					"            \"description\": \"An explanation about the purpose of this instance.\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"                \"id '7092a4f6-1944-472e-9178-e63a57cf1f66' not found\"",
					"            ]",
					"        }",
					"    },",
					"    \"additionalProperties\": true",
					"}",
					"",
					"    pm.test('The response scheme for error (404) is valid', function () {",
					"        var JsoneData=JSON.parse(responseBody);",
					"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
					"    });",
					"}",
					"",
					""
				]
			}
		}
	]
}