{
	"info": {
		"_postman_id": "6eb03a96-52bc-4cc5-a7b8-9504e62855f5",
		"name": "Flussonic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16511326"
	},
	"item": [
		{
			"name": "Flussonic",
			"item": [
				{
					"name": "0. Создать пользователя и т.д.",
					"item": [
						{
							"name": "/oauth2/token(admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable (\"access_token\", jsonData.access_token);  //записываем в переменную access_token токен",
											"",
											"pm.test(\"Status is ok, response is json\", function () {",
											"      pm.response.to.be.json; // проверка формата",
											"});",
											"",
											"var schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"access_token\",",
											"        \"refresh_token\",",
											"        \"token_type\",",
											"        \"expires_in\"",
											"    ],",
											"    \"additionalProperties\": true,",
											"    \"properties\": {",
											"        \"access_token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"refresh_token\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"token_type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"expires_in\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }",
											"};",
											"pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"});",
											"",
											"} ",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YXBpLWNsaWVudDpwYXNzd29yZA==",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Test18plat34Form",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/oauth2/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create a user (user, ATc1a2m3era)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable (\"id\", jsonData.id);",
											"pm.test(\"Status is ok, response is json\", function () {",
											"      pm.response.to.be.json; // проверка формата",
											"});",
											"pm.test(\"В ответе есть поле id, его тип string\",  () => {",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"    pm.expect(pm.response.json().id).to.string    ",
											"});",
											"    pm.test(\"Пользователь создан\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} ",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access\": {},\n    \"accessMap\": {},\n    \"additionalAccounts\": {},\n    \"additionalEmail\": [\n        \"string\"\n    ],\n    \"admin\": false,\n    \"dashboardItems\": [],\n    \"email\": \"string@mailATc1a2m3era.ru\",\n    \"emailConfirm\": false,\n    \"enabled\": true,\n    \"externalUrl\": \"http://127.0.0.1:8074\",\n    \"houseIds\": [],\n    \"houseIdsWithRefuser\": [],\n    \"id\": \"\",\n    \"language\": \"ru\",\n    \"name\": \"ATc1a2m3era\",\n    \"password\": \"ATc1a2m3era\",\n    \"patronymic\": \"\",\n    \"permissions\": [\n        \"view.dashboard\",\n        \"view.houses\",\n        \"view.scripts\",\n        \"view.devices\",\n        \"view.meters\",\n        \"view.events\",\n        \"view.settings\",\n        \"view.calculation\",\n        \"view.cameras\",\n        \"view.plans\",\n        \"needAllMeasures\",\n        \"needHeaderVariablesEditor\",\n        \"needReportByAddresses\",\n        \"minimizeDeviceInfoIfCharts\",\n        \"needPersonalInformation\",\n        \"computeDefaultPage\",\n        \"camera_w\",\n        \"controller_w\",\n        \"device_w\",\n        \"house_w\",\n        \"script_w\"\n    ],\n    \"phone\": \"\",\n    \"phoneConfirm\": false,\n    \"platforms\": [],\n    \"role\": \"user\",\n    \"roleId\": \"user\",\n    \"roleName\": \"Абонент\",\n    \"roleSettings\": {\n        \"defaultPage\": \"view.dashboard\"\n    },\n    \"status\": \"DEFAULT\",\n    \"surname\": \"\",\n    \"username\": \"ATc1a2m3era\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "/oauth2/token (user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"var jsonData = JSON.parse(responseBody);",
											"pm.globals.set(\"ACCESS_TOKEN\", jsonData.access_token); ",
											"pm.globals.set (\"REFRESH_TOKEN\", jsonData.refresh_token); ",
											"pm.globals.set(\"ACCESS_TOKEN_EXPIRY\", jsonData.expires_in); ",
											"",
											"} ",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YXBpLWNsaWVudDpwYXNzd29yZA==",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "ATc1a2m3era",
											"type": "text"
										},
										{
											"key": "password",
											"value": "ATc1a2m3era",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{host}}/oauth2/token",
									"host": [
										"{{host}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating a home",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"    pm.test(\"Status is ok, response is json\", function () {",
											"      pm.response.to.be.json; // проверка формата",
											"    });",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable (\"houseId\", jsonData.id);",
											"",
											"   var schema =  {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"variables\",",
											"        \"dashboardItems\",",
											"        \"houseGroups\",",
											"        \"guards\",",
											"        \"title\",",
											"        \"ownerId\",",
											"        \"address\",",
											"        \"apartment\",",
											"        \"timeZone\",",
											"        \"type\",",
											"        \"startTime\",",
											"        \"guardStatus\",",
											"        \"underGuard\"",
											"    ],",
											"    \"additionalProperties\": true,",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"variables\": {",
											"            \"type\": \"array\",",
											"            \"additionalItems\": true,",
											"            \"items\": {}",
											"        },",
											"        \"dashboardItems\": {",
											"            \"type\": \"array\",",
											"            \"additionalItems\": true,",
											"            \"items\": {}",
											"        },",
											"        \"houseGroups\": {",
											"            \"type\": \"array\",",
											"            \"additionalItems\": true,",
											"            \"items\": {}",
											"        },",
											"        \"guards\": {",
											"            \"type\": \"array\",",
											"            \"additionalItems\": true,",
											"            \"items\": {}",
											"        },",
											"        \"title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"ownerId\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"address\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"apartment\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"timeZone\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"type\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"startTime\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"guardStatus\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"underGuard\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }",
											"}",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"",
											"}",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ACCESS_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"1\",\n    \"type\": \"HOUSE\",\n    \"address\": \"1\",\n    \"apartment\": \"1\",\n    \"timeZone\": \"Asia/Krasnoyarsk\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/houses",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Successful request (checking the code)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Flussonic",
					"item": [
						{
							"name": "Проверка доступа до видеоплатформы (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/v2",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"v2"
									]
								}
							},
							"response": []
						},
						{
							"name": "(admin)Запрос на получение sessionId, который используется для авторизации в остальных запросах. (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable (\"session_id_flus\", jsonData.session);",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"}",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/auth/login?login={{flussonic_login}}&password=0bTgS%23N4I@V_#N4I@V_",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"auth",
										"login"
									],
									"query": [
										{
											"key": "login",
											"value": "{{flussonic_login}}"
										},
										{
											"key": "password",
											"value": "0bTgS#N4I@V_"
										}
									],
									"hash": "N4I@V_"
								}
							},
							"response": []
						},
						{
							"name": "Добавление пользователя (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    var jsonData = JSON.parse(responseBody);    ",
											"    postman.setEnvironmentVariable (\"flussonicUserId\", jsonData.id);",
											"",
											"    pm.test(\"Проверка полей login, is_admin, enabled, external_id, can_edit_organizations, can_edit_settings, can_view_organizations\", function () {",
											"        pm.expect(pm.response.json().login).to.eql(\"ATc1a2m3era\");",
											"        pm.expect(pm.response.json().is_admin).to.eql(false);",
											"        pm.expect(pm.response.json().enabled).to.eql(true);",
											"        pm.expect(pm.response.json().external_id).to.eql(pm.environment.get(\"id\"));",
											"        pm.expect(pm.response.json().can_edit_organizations).to.eql(true);",
											"        pm.expect(pm.response.json().can_edit_settings).to.eql(false);",
											"        pm.expect(pm.response.json().can_view_organizations).to.eql(true);",
											"        ",
											"    });",
											"",
											"   var schema =  {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"domain_id\",",
											"        \"login\",",
											"        \"apikey\",",
											"        \"is_admin\",",
											"        \"authorized_ip\",",
											"        \"enabled\",",
											"        \"readonly\",",
											"        \"monitoring\",",
											"        \"name\",",
											"        \"locale\",",
											"        \"note\",",
											"        \"phone\",",
											"        \"notification_email\",",
											"        \"external_id\",",
											"        \"max_sessions\",",
											"        \"can_edit_organizations\",",
											"        \"can_edit_settings\",",
											"        \"can_view_organizations\",",
											"        \"organizations\"",
											"    ],",
											"    \"additionalProperties\": true,",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"domain_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"login\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"apikey\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"is_admin\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"authorized_ip\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"enabled\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"readonly\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"monitoring\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"name\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"locale\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"note\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"phone\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"notification_email\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"external_id\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"max_sessions\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"can_edit_organizations\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"can_edit_settings\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"can_view_organizations\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"organizations\": {",
											"            \"type\": \"array\",",
											"            \"additionalItems\": true,",
											"            \"items\": {",
											"                \"type\": \"integer\"",
											"            }",
											"        }",
											"    }",
											"}",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"can_view_organizations\":true,\n\"can_edit_organizations\":true,\n\"can_edit_settings\":false,\n\"login\":\"ATc1a2m3era\",\n\"external_id\":\"{{id}}\",\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление пользователя (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    var jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable (\"flussonicUserId\", jsonData.id);",
											"",
											"        pm.test(\"Проверка полей login, is_admin, enabled, external_id, can_edit_organizations, can_edit_settings, can_view_organizations\", function () {",
											"        pm.expect(pm.response.json().login).to.eql(\"ATc1a2m3era\");",
											"        pm.expect(pm.response.json().is_admin).to.eql(false);",
											"        pm.expect(pm.response.json().enabled).to.eql(true);",
											"        pm.expect(pm.response.json().external_id).to.eql(pm.environment.get(\"id\"));",
											"        pm.expect(pm.response.json().can_edit_organizations).to.eql(true);",
											"        pm.expect(pm.response.json().can_edit_settings).to.eql(true);",
											"        pm.expect(pm.response.json().can_view_organizations).to.eql(true);",
											"        ",
											"    });",
											"",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"domain_id\",",
											"            \"login\",",
											"            \"apikey\",",
											"            \"is_admin\",",
											"            \"authorized_ip\",",
											"            \"enabled\",",
											"            \"readonly\",",
											"            \"monitoring\",",
											"            \"name\",",
											"            \"locale\",",
											"            \"note\",",
											"            \"phone\",",
											"            \"notification_email\",",
											"            \"external_id\",",
											"            \"max_sessions\",",
											"            \"can_edit_organizations\",",
											"            \"can_edit_settings\",",
											"            \"can_view_organizations\",",
											"            \"organizations\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"domain_id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"login\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"apikey\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"is_admin\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"authorized_ip\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"enabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"readonly\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"monitoring\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"name\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"locale\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"note\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"phone\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"notification_email\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"external_id\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"max_sessions\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"can_edit_organizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_edit_settings\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_view_organizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"organizations\": {",
											"                \"type\": \"array\",",
											"                \"additionalItems\": true,",
											"                \"items\": {",
											"                    \"type\": \"integer\"",
											"                }",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"can_view_organizations\":true,\n\"can_edit_organizations\":true,\n\"can_edit_settings\":true,\n\"name\":\"ATc1a2m3era\",\n\"external_id\":\"{{id}}\",\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users/{{flussonicUserId}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users",
										"{{flussonicUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос пользователя (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проврка обновления пользователя (поле name и can_edit_settings)\", function () {",
											"        pm.expect(pm.response.json().name).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().can_edit_settings).to.eql(true)",
											"    });",
											"",
											"    pm.test(\"Проврка полей id, login, external_id \", function () {",
											"        pm.expect(pm.response.json().id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().external_id).to.eql(pm.environment.get(\"id\"))",
											"    });",
											"",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"domain_id\",",
											"            \"login\",",
											"            \"apikey\",",
											"            \"is_admin\",",
											"            \"authorized_ip\",",
											"            \"enabled\",",
											"            \"readonly\",",
											"            \"monitoring\",",
											"            \"name\",",
											"            \"locale\",",
											"            \"note\",",
											"            \"phone\",",
											"            \"notification_email\",",
											"            \"external_id\",",
											"            \"max_sessions\",",
											"            \"can_edit_organizations\",",
											"            \"can_edit_settings\",",
											"            \"can_view_organizations\",",
											"            \"organizations\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"domain_id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"login\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"apikey\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"is_admin\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"authorized_ip\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"enabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"readonly\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"monitoring\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"name\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"locale\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"note\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"phone\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"notification_email\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"external_id\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"max_sessions\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"can_edit_organizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_edit_settings\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_view_organizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"organizations\": {",
											"                \"type\": \"array\",",
											"                \"additionalItems\": true,",
											"                \"items\": {",
											"                    \"type\": \"integer\"",
											"                }",
											"            }",
											"        }",
											"    };",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users/{{flussonicUserId}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users",
										"{{flussonicUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Поиск пользователя по логину (для синхронизации пользователя) (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проврка полей name, id, login, external_id и can_edit_settings \", function () {",
											"        pm.expect(pm.response.json()[0].name).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json()[0].id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json()[0].login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json()[0].external_id).to.eql(pm.environment.get(\"id\"))",
											"        pm.expect(pm.response.json()[0].can_edit_settings).to.eql(true)",
											"    });",
											"",
											"    var schema =  {",
											"        \"type\": \"array\",",
											"        \"additionalItems\": true,",
											"        \"items\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"id\",",
											"                \"domain_id\",",
											"                \"login\",",
											"                \"apikey\",",
											"                \"is_admin\",",
											"                \"authorized_ip\",",
											"                \"enabled\",",
											"                \"readonly\",",
											"                \"monitoring\",",
											"                \"name\",",
											"                \"locale\",",
											"                \"note\",",
											"                \"phone\",",
											"                \"notification_email\",",
											"                \"external_id\",",
											"                \"max_sessions\",",
											"                \"can_edit_organizations\",",
											"                \"can_edit_settings\",",
											"                \"can_view_organizations\",",
											"                \"organizations\"",
											"            ],",
											"            \"additionalProperties\": true,",
											"            \"properties\": {",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"domain_id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"login\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"apikey\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"is_admin\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"authorized_ip\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"enabled\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"readonly\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"monitoring\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"name\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"locale\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"note\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"phone\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"notification_email\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"external_id\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"max_sessions\": {",
											"                    \"type\": \"null\"",
											"                },",
											"                \"can_edit_organizations\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"can_edit_settings\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"can_view_organizations\": {",
											"                    \"type\": \"boolean\"",
											"                },",
											"                \"organizations\": {",
											"                    \"type\": \"array\",",
											"                    \"additionalItems\": true,",
											"                    \"items\": {",
											"                        \"type\": \"integer\"",
											"                    }",
											"                }",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [500]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users/?login=ATc1a2m3era",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users",
										""
									],
									"query": [
										{
											"key": "login",
											"value": "ATc1a2m3era"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "whoami (admin) (Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/auth/whoami",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"auth",
										"whoami"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление организации (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    var jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable (\"organizationId_flus\", jsonData.id);",
											"",
											"    pm.test(\"Проврка полей dvr_limit, owner/id, owner/login, title, user_limit, camera_limit\", function () {",
											"        pm.expect(pm.response.json().dvr_limit).to.eql(1000)",
											"        pm.expect(pm.response.json().owner.id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().owner.login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era_organization\")",
											"        pm.expect(pm.response.json().user_limit).to.eql(3)",
											"        pm.expect(pm.response.json().camera_limit).to.eql(100)",
											"    });",
											"",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"dvr_limit\",",
											"            \"owner\",",
											"            \"title\",",
											"            \"activity_events_lifetime_days\",",
											"            \"domain\",",
											"            \"user_limit\",",
											"            \"camera_limit\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"dvr_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"owner\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"login\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"login\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }",
											"            },",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"activity_events_lifetime_days\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"domain\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"title\",",
											"                    \"id\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"title\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    }",
											"                }",
											"            },",
											"            \"user_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_limit\": {",
											"                \"type\": \"integer\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dvr_limit\": 1000,\n    \"title\": \"ATc1a2m3era_organization\",\n    \"owner_id\": {{flussonicUserId}},\n    \"user_limit\": 3,\n    \"camera_limit\": 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление организации (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"    pm.test(\"Проврка полей dvr_limit, owner/id, owner/login, title, user_limit, camera_limit\", function () {",
											"        pm.expect(pm.response.json().dvr_limit).to.eql(1000)",
											"        pm.expect(pm.response.json().owner.id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().owner.login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era_organization\")",
											"        pm.expect(pm.response.json().user_limit).to.eql(3)",
											"        pm.expect(pm.response.json().camera_limit).to.eql(10)",
											"    });",
											"        var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"dvr_limit\",",
											"            \"owner\",",
											"            \"title\",",
											"            \"activity_events_lifetime_days\",",
											"            \"domain\",",
											"            \"user_limit\",",
											"            \"camera_limit\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"dvr_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"owner\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"login\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"login\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }",
											"            },",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"activity_events_lifetime_days\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"domain\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"title\",",
											"                    \"id\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"title\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    }",
											"                }",
											"            },",
											"            \"user_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_limit\": {",
											"                \"type\": \"integer\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dvr_limit\": 1000,\n    \"title\": \"ATc1a2m3era_organization\",\n    \"owner_id\": {{flussonicUserId}},\n    \"user_limit\": 3,\n    \"camera_limit\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос организации (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проверка полей dvr_limit, owner/id, owner/login, title, user_limit, camera_limit, а так же user_count и camera_count\", function () {",
											"        pm.expect(pm.response.json().dvr_limit).to.eql(1000)",
											"        pm.expect(pm.response.json().owner.id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().owner.login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era_organization\")",
											"        pm.expect(pm.response.json().user_limit).to.eql(3)",
											"        pm.expect(pm.response.json().camera_limit).to.eql(10)",
											"",
											"        pm.expect(pm.response.json().user_count).to.eql(1)",
											"        pm.expect(pm.response.json().camera_count).to.eql(0)",
											"",
											"    });",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"is_default\",",
											"            \"can_edit_cameras\",",
											"            \"dvr_limit\",",
											"            \"user_count\",",
											"            \"camera_count\",",
											"            \"owner\",",
											"            \"can_edit_users\",",
											"            \"title\",",
											"            \"mosaic_count\",",
											"            \"activity_events_lifetime_days\",",
											"            \"can_view_stats\",",
											"            \"is_member\",",
											"            \"domain\",",
											"            \"user_limit\",",
											"            \"camera_limit\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"is_default\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_edit_cameras\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"dvr_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"user_count\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_count\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"owner\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"login\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"login\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }",
											"            },",
											"            \"can_edit_users\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"mosaic_count\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"activity_events_lifetime_days\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"can_view_stats\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"is_member\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"domain\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"title\",",
											"                    \"id\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"title\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    }",
											"                }",
											"            },",
											"            \"user_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_limit\": {",
											"                \"type\": \"integer\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create a user (user, ATc1a2m3era2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable (\"id2\", jsonData.id);",
											"pm.test(\"Status is ok, response is json\", function () {",
											"      pm.response.to.be.json; // проверка формата",
											"});",
											"pm.test(\"В ответе есть поле id, его тип string\",  () => {",
											"    pm.expect(pm.response.json()).to.have.property('id');",
											"    pm.expect(pm.response.json().id).to.string    ",
											"});",
											"    pm.test(\"Пользователь создан\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"} ",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access\": {},\n    \"accessMap\": {},\n    \"additionalAccounts\": {},\n    \"additionalEmail\": [\n        \"string\"\n    ],\n    \"admin\": false,\n    \"dashboardItems\": [],\n    \"email\": \"string@mailATc1a2m3era2.ru\",\n    \"emailConfirm\": false,\n    \"enabled\": true,\n    \"externalUrl\": \"http://127.0.0.1:8074\",\n    \"houseIds\": [],\n    \"houseIdsWithRefuser\": [],\n    \"id\": \"\",\n    \"language\": \"ru\",\n    \"name\": \"ATc1a2m3era2\",\n    \"password\": \"ATc1a2m3era2\",\n    \"patronymic\": \"\",\n    \"permissions\": [\n        \"view.dashboard\",\n        \"view.houses\",\n        \"view.scripts\",\n        \"view.devices\",\n        \"view.meters\",\n        \"view.events\",\n        \"view.settings\",\n        \"view.calculation\",\n        \"view.cameras\",\n        \"view.plans\",\n        \"needAllMeasures\",\n        \"needHeaderVariablesEditor\",\n        \"needReportByAddresses\",\n        \"minimizeDeviceInfoIfCharts\",\n        \"needPersonalInformation\",\n        \"computeDefaultPage\",\n        \"camera_w\",\n        \"controller_w\",\n        \"device_w\",\n        \"house_w\",\n        \"script_w\"\n    ],\n    \"phone\": \"\",\n    \"phoneConfirm\": false,\n    \"platforms\": [],\n    \"role\": \"user\",\n    \"roleId\": \"user\",\n    \"roleName\": \"Абонент\",\n    \"roleSettings\": {\n        \"defaultPage\": \"view.dashboard\"\n    },\n    \"status\": \"DEFAULT\",\n    \"surname\": \"\",\n    \"username\": \"ATc1a2m3era2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление пользователя (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    var jsonData = JSON.parse(responseBody);",
											"    postman.setEnvironmentVariable (\"flussonicUserId2\", jsonData.id);",
											"",
											"    pm.test(\"Проверка полей login, is_admin, enabled, external_id, can_edit_organizations, can_edit_settings, can_view_organizations\", function () {",
											"        pm.expect(pm.response.json().login).to.eql(\"ATc1a2m3era2\");",
											"        pm.expect(pm.response.json().is_admin).to.eql(false);",
											"        pm.expect(pm.response.json().enabled).to.eql(true);",
											"        pm.expect(pm.response.json().external_id).to.eql(pm.environment.get(\"id2\"));",
											"        pm.expect(pm.response.json().can_edit_organizations).to.eql(true);",
											"        pm.expect(pm.response.json().can_edit_settings).to.eql(false);",
											"        pm.expect(pm.response.json().can_view_organizations).to.eql(true);",
											"        ",
											"    });",
											"",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"domain_id\",",
											"            \"login\",",
											"            \"apikey\",",
											"            \"is_admin\",",
											"            \"authorized_ip\",",
											"            \"enabled\",",
											"            \"readonly\",",
											"            \"monitoring\",",
											"            \"name\",",
											"            \"locale\",",
											"            \"note\",",
											"            \"phone\",",
											"            \"notification_email\",",
											"            \"external_id\",",
											"            \"max_sessions\",",
											"            \"can_edit_organizations\",",
											"            \"can_edit_settings\",",
											"            \"can_view_organizations\",",
											"            \"organizations\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"domain_id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"login\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"apikey\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"is_admin\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"authorized_ip\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"enabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"readonly\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"monitoring\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"name\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"locale\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"note\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"phone\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"notification_email\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"external_id\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"max_sessions\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"can_edit_organizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_edit_settings\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_view_organizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"organizations\": {",
											"                \"type\": \"array\",",
											"                \"additionalItems\": true,",
											"                \"items\": {",
											"                    \"type\": \"integer\"",
											"                }",
											"            }",
											"        }",
											"    }",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"can_view_organizations\":true,\n\"can_edit_organizations\":true,\n\"can_edit_settings\":false,\n\"login\":\"ATc1a2m3era2\",\n\"external_id\":\"{{id2}}\",\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Генерация token'а пользователя для получения sessionId. Полученное в ответе тело отсылается в запрос на sessionId. (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable (\"autologin_token\", jsonData.autologin_token);",
											"",
											"   var schema =  {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"autologin_token\"",
											"    ],",
											"    \"additionalProperties\": true,",
											"    \"properties\": {",
											"        \"autologin_token\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"ATc1a2m3era\",\n    \"external_id\": \"{{id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/auth/generate-autologin-token",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"auth",
										"generate-autologin-token"
									]
								}
							},
							"response": []
						},
						{
							"name": "(user, ATc1a2m3era)Запрос на получение sessionId (на Flussonic) (sessionId в куках)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"    postman.setEnvironmentVariable (\"session_id_flus_user\", pm.cookies.get('v2session'));",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"}",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "autologin_token",
											"value": "{{autologin_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/autologin",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"autologin"
									]
								}
							},
							"response": []
						},
						{
							"name": "whoami (user, ATc1a2m3era) (Flussonic) проверка получения sessionId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"Проврка полей id, login, can_edit_settings, is_domain_admin,  \", function () {",
											"        pm.expect(pm.response.json().id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().can_edit_settings).to.eql(true)",
											"        pm.expect(pm.response.json().is_domain_admin).to.eql(false)",
											"",
											"    });",
											"",
											"}",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/auth/whoami",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"auth",
										"whoami"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление прав пользователю к организации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проврка полей user_id,  can_view_organization_stats, can_edit_organization_users,can_edit_organization_cameras, can_edit_organization_plists\", function () {",
											"        pm.expect(pm.response.json().user_id).to.eql(Number(pm.environment.get(\"flussonicUserId2\")))",
											"        // pm.expect(pm.response.json().can_view_organization_plists).to.eql(true)",
											"        pm.expect(pm.response.json().can_view_organization_stats).to.eql(false)",
											"        pm.expect(pm.response.json().can_edit_organization_users).to.eql(false)",
											"        pm.expect(pm.response.json().login).to.eql(\"ATc1a2m3era2\")",
											"        pm.expect(pm.response.json().can_edit_organization_cameras).to.eql(true)",
											"        // pm.expect(pm.response.json().can_edit_organization_cameras).to.eql(true)",
											"    });",
											"",
											"   var schema =  {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"user_id\",",
											"        \"can_view_organization_plists\",",
											"        \"can_view_organization_stats\",",
											"        \"can_edit_organization_users\",",
											"        \"notification_email\",",
											"        \"login\",",
											"        \"folders_permissions\",",
											"        \"can_edit_organization_cameras\",",
											"        \"can_edit_organization_plists\"",
											"    ],",
											"    \"additionalProperties\": true,",
											"    \"properties\": {",
											"        \"user_id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"can_view_organization_plists\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"can_view_organization_stats\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"can_edit_organization_users\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"notification_email\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"login\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"folders_permissions\": {",
											"            \"type\": \"array\",",
											"            \"additionalItems\": true,",
											"            \"items\": {}",
											"        },",
											"        \"can_edit_organization_cameras\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"can_edit_organization_plists\": {",
											"            \"type\": \"boolean\"",
											"        }",
											"    }",
											"}",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"user_id\": {{flussonicUserId2}},\n\"can_edit_organization_cameras\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}/users/",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}",
										"users",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос организации (на Flussonic) (проверка изменений)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проверка полей dvr_limit, owner/id, owner/login, title, user_limit, camera_limit, а так же user_count и camera_count\", function () {",
											"        pm.expect(pm.response.json().dvr_limit).to.eql(1000)",
											"        pm.expect(pm.response.json().owner.id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().owner.login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era_organization\")",
											"        pm.expect(pm.response.json().user_limit).to.eql(3)",
											"        pm.expect(pm.response.json().camera_limit).to.eql(10)",
											"",
											"        pm.expect(pm.response.json().user_count).to.eql(2)",
											"        pm.expect(pm.response.json().camera_count).to.eql(0)",
											"    });",
											"",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"is_default\",",
											"            \"can_edit_cameras\",",
											"            \"dvr_limit\",",
											"            \"user_count\",",
											"            \"camera_count\",",
											"            \"owner\",",
											"            \"can_edit_users\",",
											"            \"title\",",
											"            \"mosaic_count\",",
											"            \"activity_events_lifetime_days\",",
											"            \"can_view_stats\",",
											"            \"is_member\",",
											"            \"domain\",",
											"            \"user_limit\",",
											"            \"camera_limit\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"is_default\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"can_edit_cameras\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"dvr_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"user_count\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_count\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"owner\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"login\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"login\": {",
											"                        \"type\": \"string\"",
											"                    }",
											"                }",
											"            },",
											"            \"can_edit_users\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"mosaic_count\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"activity_events_lifetime_days\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"can_view_stats\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"is_member\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"domain\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"title\",",
											"                    \"id\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"title\": {",
											"                        \"type\": \"string\"",
											"                    },",
											"                    \"id\": {",
											"                        \"type\": \"integer\"",
											"                    }",
											"                }",
											"            },",
											"            \"user_limit\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_limit\": {",
											"                \"type\": \"integer\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление пользователя из организации (на Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"success = true ?\", function () {",
											"        pm.expect(pm.response.json().success).to.eql(true)       ",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}/users/{{flussonicUserId2}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}",
										"users",
										"{{flussonicUserId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление пользователя с Flussonic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"success = true ?\", function () {",
											"        pm.expect(pm.response.json().success).to.eql(true)       ",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users/{{flussonicUserId2}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users",
										"{{flussonicUserId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "удалить пользователя с платформы",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Пользователь удален (код 204)\", function () {",
											"    pm.expect(pm.response.code).to.equal(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/users/{{id2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"{{id2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос организации (на Flussonic) (проверка удаления)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"   var schema =  {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"id\",",
											"        \"is_default\",",
											"        \"can_edit_cameras\",",
											"        \"dvr_limit\",",
											"        \"user_count\",",
											"        \"camera_count\",",
											"        \"owner\",",
											"        \"can_edit_users\",",
											"        \"title\",",
											"        \"mosaic_count\",",
											"        \"activity_events_lifetime_days\",",
											"        \"can_view_stats\",",
											"        \"is_member\",",
											"        \"domain\",",
											"        \"user_limit\",",
											"        \"camera_limit\"",
											"    ],",
											"    \"additionalProperties\": true,",
											"    \"properties\": {",
											"        \"id\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"is_default\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"can_edit_cameras\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"dvr_limit\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"user_count\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"camera_count\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"owner\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"id\",",
											"                \"login\"",
											"            ],",
											"            \"additionalProperties\": true,",
											"            \"properties\": {",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                },",
											"                \"login\": {",
											"                    \"type\": \"string\"",
											"                }",
											"            }",
											"        },",
											"        \"can_edit_users\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"title\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"mosaic_count\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"activity_events_lifetime_days\": {",
											"            \"type\": \"null\"",
											"        },",
											"        \"can_view_stats\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"is_member\": {",
											"            \"type\": \"boolean\"",
											"        },",
											"        \"domain\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"title\",",
											"                \"id\"",
											"            ],",
											"            \"additionalProperties\": true,",
											"            \"properties\": {",
											"                \"title\": {",
											"                    \"type\": \"string\"",
											"                },",
											"                \"id\": {",
											"                    \"type\": \"integer\"",
											"                }",
											"            }",
											"        },",
											"        \"user_limit\": {",
											"            \"type\": \"integer\"",
											"        },",
											"        \"camera_limit\": {",
											"            \"type\": \"integer\"",
											"        }",
											"    }",
											"}",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"    pm.test(\"Проверка полей dvr_limit, owner/id, owner/login, title, user_limit, camera_limit, а так же user_count и camera_count\", function () {",
											"        pm.expect(pm.response.json().dvr_limit).to.eql(1000)",
											"        pm.expect(pm.response.json().owner.id).to.eql(Number(pm.environment.get(\"flussonicUserId\")))",
											"        pm.expect(pm.response.json().owner.login).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era_organization\")",
											"        pm.expect(pm.response.json().user_limit).to.eql(3)",
											"        pm.expect(pm.response.json().camera_limit).to.eql(10)",
											"",
											"        pm.expect(pm.response.json().user_count).to.eql(1)",
											"        pm.expect(pm.response.json().camera_count).to.eql(0)",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление камеры (1 способ добавления камер)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    // setTimeout(function(){}, [3000]);",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"//    var schema =  {",
											"//     \"type\": \"object\",",
											"//     \"required\": [",
											"//         \"agent_id\",",
											"//         \"agent_key\",",
											"//         \"agent_model\",",
											"//         \"agent_serial\",",
											"//         \"agent_status\",",
											"//         \"comment\",",
											"//         \"coordinates\",",
											"//         \"dvr_depth\",",
											"//         \"dvr_lock_days\",",
											"//         \"dvr_path\",",
											"//         \"dvr_space\",",
											"//         \"enabled\",",
											"//         \"external_id\",",
											"//         \"extrenal_id\",",
											"//         \"folder_coordinates\",",
											"//         \"folder_id\",",
											"//         \"group_id\",",
											"//         \"groups\",",
											"//         \"has_actions\",",
											"//         \"last_change\",",
											"//         \"last_event_time\",",
											"//         \"motion_detector_enabled\",",
											"//         \"name\",",
											"//         \"onvif_profile\",",
											"//         \"onvif_ptz\",",
											"//         \"onvif_url\",",
											"//         \"organization_id\",",
											"//         \"permissions\",",
											"//         \"playback_config\",",
											"//         \"postal_address\",",
											"//         \"precise_thumbnails_days\",",
											"//         \"preset\",",
											"//         \"preset_id\",",
											"//         \"server\",",
											"//         \"static\",",
											"//         \"stream_status\",",
											"//         \"stream_url\",",
											"//         \"streamer_id\",",
											"//         \"substream_url\",",
											"//         \"thumbnails\",",
											"//         \"thumbnails_url\",",
											"//         \"title\",",
											"//         \"user_attributes\",",
											"//         \"video_only\",",
											"//         \"vision_alg\",",
											"//         \"vision_areas\",",
											"//         \"vision_enabled\",",
											"//         \"vision_gpu\"",
											"//     ],",
											"//     \"additionalProperties\": true,",
											"//     \"properties\": {",
											"//         \"agent_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_key\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_model\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_serial\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_status\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"comment\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"coordinates\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"dvr_depth\": {",
											"//             \"type\": \"number\"",
											"//         },",
											"//         \"dvr_lock_days\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"dvr_path\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"dvr_space\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"enabled\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"external_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"extrenal_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"folder_coordinates\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"folder_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"group_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"groups\": {",
											"//             \"type\": \"array\",",
											"//             \"additionalItems\": true,",
											"//             \"items\": {}",
											"//         },",
											"//         \"has_actions\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"last_change\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"user\",",
											"//                 \"domain_id\",",
											"//                 \"object_id\",",
											"//                 \"created_at\",",
											"//                 \"event_data\",",
											"//                 \"action_type\",",
											"//                 \"object_repr\",",
											"//                 \"object_type\",",
											"//                 \"request_data\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"user\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"domain_id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"object_id\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"created_at\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"event_data\": {",
											"//                     \"type\": \"object\",",
											"//                     \"required\": [",
											"//                         \"changed_data\"",
											"//                     ],",
											"//                     \"additionalProperties\": true,",
											"//                     \"properties\": {",
											"//                         \"changed_data\": {",
											"//                             \"type\": \"object\",",
											"//                             \"required\": [],",
											"//                             \"additionalProperties\": true,",
											"//                             \"properties\": {}",
											"//                         }",
											"//                     }",
											"//                 },",
											"//                 \"action_type\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"object_repr\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"object_type\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"request_data\": {",
											"//                     \"type\": \"object\",",
											"//                     \"required\": [",
											"//                         \"ip\",",
											"//                         \"user_agent\"",
											"//                     ],",
											"//                     \"additionalProperties\": true,",
											"//                     \"properties\": {",
											"//                         \"ip\": {",
											"//                             \"type\": \"string\"",
											"//                         },",
											"//                         \"user_agent\": {",
											"//                             \"type\": \"string\"",
											"//                         }",
											"//                     }",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"last_event_time\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"motion_detector_enabled\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"name\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"onvif_profile\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"onvif_ptz\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"onvif_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"organization_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"permissions\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"view\",",
											"//                 \"edit\",",
											"//                 \"ptz\",",
											"//                 \"dvr\",",
											"//                 \"dvr_depth_limit\",",
											"//                 \"actions\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"view\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"edit\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"ptz\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"dvr\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"dvr_depth_limit\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"actions\": {",
											"//                     \"type\": \"boolean\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"playback_config\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"token\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"token\": {",
											"//                     \"type\": \"string\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"postal_address\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"precise_thumbnails_days\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"preset\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"domain_id\",",
											"//                 \"dvr_depth\",",
											"//                 \"dvr_lock_days\",",
											"//                 \"dvr_space\",",
											"//                 \"id\",",
											"//                 \"is_adjustable\",",
											"//                 \"is_default\",",
											"//                 \"is_deleted\",",
											"//                 \"precise_thumbnails_days\",",
											"//                 \"title\",",
											"//                 \"vision_alg\",",
											"//                 \"vision_areas\",",
											"//                 \"vision_enabled\",",
											"//                 \"vision_gpu\",",
											"//                 \"vision_params\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"domain_id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"dvr_depth\": {",
											"//                     \"type\": \"number\"",
											"//                 },",
											"//                 \"dvr_lock_days\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"dvr_space\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"is_adjustable\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"is_default\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"is_deleted\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"precise_thumbnails_days\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"title\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"vision_alg\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_areas\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_enabled\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_gpu\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_params\": {",
											"//                     \"type\": \"object\",",
											"//                     \"required\": [],",
											"//                     \"additionalProperties\": true,",
											"//                     \"properties\": {}",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"preset_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"server\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"static\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"stream_status\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"name\",",
											"//                 \"server\",",
											"//                 \"alive\",",
											"//                 \"lifetime\",",
											"//                 \"bitrate\",",
											"//                 \"source_error\",",
											"//                 \"http_port\",",
											"//                 \"https_port\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"name\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"server\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"alive\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"lifetime\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"bitrate\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"source_error\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"http_port\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"https_port\": {",
											"//                     \"type\": \"integer\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"stream_url\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"streamer_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"substream_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"thumbnails\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"thumbnails_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"title\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"user_attributes\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"favorite\",",
											"//                 \"motion_alarm\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"favorite\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"motion_alarm\": {",
											"//                     \"type\": \"boolean\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"video_only\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"vision_alg\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_areas\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_enabled\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_gpu\": {",
											"//             \"type\": \"null\"",
											"//         }",
											"//     }",
											"// }",
											"",
											"//     pm.test('Schema is valid', function () {",
											"//         var JsoneData=JSON.parse(responseBody);",
											"//         pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"//     });",
											"",
											"    pm.test(\"Проверка полей dvr_depth, dvr_lock_days, dvr_space, enabled, organization_id и name \", function () {",
											"        pm.expect(pm.response.json().dvr_depth).to.eql(1.0)",
											"        pm.expect(pm.response.json().dvr_lock_days).to.eql(1)",
											"        pm.expect(pm.response.json().dvr_space).to.eql(1)",
											"        pm.expect(pm.response.json().enabled).to.eql(true)",
											"        pm.expect(pm.response.json().organization_id).to.eql(Number(pm.environment.get(\"organizationId_flus\")))",
											"        pm.expect(pm.response.json().name).to.eql(\"3camera9-ATAT-4242-eto1-cameraATa777\")",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// setTimeout(function(){}, [3000]);",
											"// // иначе не проходит проверка по схеме"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"stream_url\":\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\",\n\"organization_id\":{{organizationId_flus}},\n\"onvif_ptz\":false,\n\"dvr_space\":1,\n\"video_only\":\"false\",\n\"dvr_depth\":1,\n\"dvr_lock_days\":1,\n\"name\":\"3camera9-ATAT-4242-eto1-cameraATa777\",\n\"title\":\"ATc1a2m3era\",\n\"motion_detector_enabled\":true,\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос камер пользователя (Flussonic) (проверка добавления камеры)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"//    var schema =  {",
											"//     \"type\": \"array\",",
											"//     \"additionalItems\": true,",
											"//     \"items\": {",
											"//         \"type\": \"object\",",
											"//         \"required\": [",
											"//             \"agent_id\",",
											"//             \"agent_key\",",
											"//             \"agent_model\",",
											"//             \"agent_serial\",",
											"//             \"agent_status\",",
											"//             \"comment\",",
											"//             \"coordinates\",",
											"//             \"dvr_depth\",",
											"//             \"dvr_lock_days\",",
											"//             \"dvr_path\",",
											"//             \"dvr_space\",",
											"//             \"enabled\",",
											"//             \"external_id\",",
											"//             \"extrenal_id\",",
											"//             \"folder_coordinates\",",
											"//             \"folder_id\",",
											"//             \"group_id\",",
											"//             \"groups\",",
											"//             \"has_actions\",",
											"//             \"last_change\",",
											"//             \"last_event_time\",",
											"//             \"motion_detector_enabled\",",
											"//             \"name\",",
											"//             \"onvif_profile\",",
											"//             \"onvif_ptz\",",
											"//             \"onvif_url\",",
											"//             \"organization_id\",",
											"//             \"permissions\",",
											"//             \"playback_config\",",
											"//             \"postal_address\",",
											"//             \"precise_thumbnails_days\",",
											"//             \"preset\",",
											"//             \"preset_id\",",
											"//             \"server\",",
											"//             \"static\",",
											"//             \"stream_status\",",
											"//             \"stream_url\",",
											"//             \"streamer_id\",",
											"//             \"substream_url\",",
											"//             \"thumbnails\",",
											"//             \"thumbnails_url\",",
											"//             \"title\",",
											"//             \"user_attributes\",",
											"//             \"video_only\",",
											"//             \"vision_alg\",",
											"//             \"vision_areas\",",
											"//             \"vision_enabled\",",
											"//             \"vision_gpu\"",
											"//         ],",
											"//         \"additionalProperties\": true,",
											"//         \"properties\": {",
											"//             \"agent_id\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"agent_key\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"agent_model\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"agent_serial\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"agent_status\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"comment\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"coordinates\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"dvr_depth\": {",
											"//                 \"type\": \"number\"",
											"//             },",
											"//             \"dvr_lock_days\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"dvr_path\": {",
											"//                 \"type\": \"string\"",
											"//             },",
											"//             \"dvr_space\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"enabled\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"external_id\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"extrenal_id\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"folder_coordinates\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"folder_id\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"group_id\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"groups\": {",
											"//                 \"type\": \"array\",",
											"//                 \"additionalItems\": true,",
											"//                 \"items\": {}",
											"//             },",
											"//             \"has_actions\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"last_change\": {",
											"//                 \"type\": \"object\",",
											"//                 \"required\": [],",
											"//                 \"additionalProperties\": true,",
											"//                 \"properties\": {}",
											"//             },",
											"//             \"last_event_time\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"motion_detector_enabled\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"name\": {",
											"//                 \"type\": \"string\"",
											"//             },",
											"//             \"onvif_profile\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"onvif_ptz\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"onvif_url\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"organization_id\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"permissions\": {",
											"//                 \"type\": \"object\",",
											"//                 \"required\": [",
											"//                     \"view\",",
											"//                     \"edit\",",
											"//                     \"ptz\",",
											"//                     \"dvr\",",
											"//                     \"dvr_depth_limit\",",
											"//                     \"actions\"",
											"//                 ],",
											"//                 \"additionalProperties\": true,",
											"//                 \"properties\": {",
											"//                     \"view\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"edit\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"ptz\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"dvr\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"dvr_depth_limit\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"actions\": {",
											"//                         \"type\": \"boolean\"",
											"//                     }",
											"//                 }",
											"//             },",
											"//             \"playback_config\": {",
											"//                 \"type\": \"object\",",
											"//                 \"required\": [",
											"//                     \"token\"",
											"//                 ],",
											"//                 \"additionalProperties\": true,",
											"//                 \"properties\": {",
											"//                     \"token\": {",
											"//                         \"type\": \"string\"",
											"//                     }",
											"//                 }",
											"//             },",
											"//             \"postal_address\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"precise_thumbnails_days\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"preset\": {",
											"//                 \"type\": \"object\",",
											"//                 \"required\": [",
											"//                     \"domain_id\",",
											"//                     \"dvr_depth\",",
											"//                     \"dvr_lock_days\",",
											"//                     \"dvr_space\",",
											"//                     \"id\",",
											"//                     \"is_adjustable\",",
											"//                     \"is_default\",",
											"//                     \"is_deleted\",",
											"//                     \"precise_thumbnails_days\",",
											"//                     \"title\",",
											"//                     \"vision_alg\",",
											"//                     \"vision_areas\",",
											"//                     \"vision_enabled\",",
											"//                     \"vision_gpu\",",
											"//                     \"vision_params\"",
											"//                 ],",
											"//                 \"additionalProperties\": true,",
											"//                 \"properties\": {",
											"//                     \"domain_id\": {",
											"//                         \"type\": \"integer\"",
											"//                     },",
											"//                     \"dvr_depth\": {",
											"//                         \"type\": \"number\"",
											"//                     },",
											"//                     \"dvr_lock_days\": {",
											"//                         \"type\": \"integer\"",
											"//                     },",
											"//                     \"dvr_space\": {",
											"//                         \"type\": \"integer\"",
											"//                     },",
											"//                     \"id\": {",
											"//                         \"type\": \"integer\"",
											"//                     },",
											"//                     \"is_adjustable\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"is_default\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"is_deleted\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"precise_thumbnails_days\": {",
											"//                         \"type\": \"integer\"",
											"//                     },",
											"//                     \"title\": {",
											"//                         \"type\": \"string\"",
											"//                     },",
											"//                     \"vision_alg\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"vision_areas\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"vision_enabled\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"vision_gpu\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"vision_params\": {",
											"//                         \"type\": \"object\",",
											"//                         \"required\": [],",
											"//                         \"additionalProperties\": true,",
											"//                         \"properties\": {}",
											"//                     }",
											"//                 }",
											"//             },",
											"//             \"preset_id\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"server\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"static\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"stream_status\": {",
											"//                 \"type\": \"object\",",
											"//                 \"required\": [",
											"//                     \"name\",",
											"//                     \"server\",",
											"//                     \"alive\",",
											"//                     \"lifetime\",",
											"//                     \"bitrate\",",
											"//                     \"source_error\",",
											"//                     \"http_port\",",
											"//                     \"https_port\"",
											"//                 ],",
											"//                 \"additionalProperties\": true,",
											"//                 \"properties\": {",
											"//                     \"name\": {",
											"//                         \"type\": \"string\"",
											"//                     },",
											"//                     \"server\": {",
											"//                         \"type\": \"string\"",
											"//                     },",
											"//                     \"alive\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"lifetime\": {",
											"//                         \"type\": \"number\"",
											"//                     },",
											"//                     \"bitrate\": {",
											"//                         \"type\": \"integer\"",
											"//                     },",
											"//                     \"source_error\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"http_port\": {",
											"//                         \"type\": \"null\"",
											"//                     },",
											"//                     \"https_port\": {",
											"//                         \"type\": \"integer\"",
											"//                     }",
											"//                 }",
											"//             },",
											"//             \"stream_url\": {",
											"//                 \"type\": \"string\"",
											"//             },",
											"//             \"streamer_id\": {",
											"//                 \"type\": \"integer\"",
											"//             },",
											"//             \"substream_url\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"thumbnails\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"thumbnails_url\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"title\": {",
											"//                 \"type\": \"string\"",
											"//             },",
											"//             \"user_attributes\": {",
											"//                 \"type\": \"object\",",
											"//                 \"required\": [",
											"//                     \"favorite\",",
											"//                     \"motion_alarm\"",
											"//                 ],",
											"//                 \"additionalProperties\": true,",
											"//                 \"properties\": {",
											"//                     \"favorite\": {",
											"//                         \"type\": \"boolean\"",
											"//                     },",
											"//                     \"motion_alarm\": {",
											"//                         \"type\": \"boolean\"",
											"//                     }",
											"//                 }",
											"//             },",
											"//             \"video_only\": {",
											"//                 \"type\": \"boolean\"",
											"//             },",
											"//             \"vision_alg\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"vision_areas\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"vision_enabled\": {",
											"//                 \"type\": \"null\"",
											"//             },",
											"//             \"vision_gpu\": {",
											"//                 \"type\": \"null\"",
											"//             }",
											"//         }",
											"//     }",
											"// }",
											"",
											"//     pm.test('Schema is valid', function () {",
											"//         var JsoneData=JSON.parse(responseBody);",
											"//         pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"//     });",
											"",
											"    pm.test(\"Проверка количества камер у пользователя (размер возвращаемого массива), а также полей dvr_depth, dvr_lock_days, dvr_space, enabled, organization_id, name,  title и stream_url\", function () {",
											"        pm.expect(pm.response.json().length).to.eql(1)",
											"        pm.expect(pm.response.json()[0].dvr_depth).to.eql(1.0)",
											"        pm.expect(pm.response.json()[0].dvr_lock_days).to.eql(1)",
											"        pm.expect(pm.response.json()[0].dvr_space).to.eql(1)",
											"        pm.expect(pm.response.json()[0].enabled).to.eql(true)",
											"        pm.expect(pm.response.json()[0].organization_id).to.eql(Number(pm.environment.get(\"organizationId_flus\")))",
											"        pm.expect(pm.response.json()[0].name).to.eql(\"3camera9-ATAT-4242-eto1-cameraATa777\")",
											"        pm.expect(pm.response.json()[0].title).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json()[0].stream_url).to.eql(\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\")",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// setTimeout(function(){}, [8000]);",
											"// // иначе не проходит проверка по схеме"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras"
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление камеры (Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"//    var schema =  {",
											"//     \"type\": \"object\",",
											"//     \"required\": [",
											"//         \"agent_id\",",
											"//         \"agent_key\",",
											"//         \"agent_model\",",
											"//         \"agent_serial\",",
											"//         \"agent_status\",",
											"//         \"comment\",",
											"//         \"coordinates\",",
											"//         \"dvr_depth\",",
											"//         \"dvr_lock_days\",",
											"//         \"dvr_path\",",
											"//         \"dvr_space\",",
											"//         \"enabled\",",
											"//         \"external_id\",",
											"//         \"extrenal_id\",",
											"//         \"folder_coordinates\",",
											"//         \"folder_id\",",
											"//         \"group_id\",",
											"//         \"groups\",",
											"//         \"has_actions\",",
											"//         \"last_change\",",
											"//         \"last_event_time\",",
											"//         \"motion_detector_enabled\",",
											"//         \"name\",",
											"//         \"onvif_profile\",",
											"//         \"onvif_ptz\",",
											"//         \"onvif_url\",",
											"//         \"organization_id\",",
											"//         \"permissions\",",
											"//         \"playback_config\",",
											"//         \"postal_address\",",
											"//         \"precise_thumbnails_days\",",
											"//         \"preset\",",
											"//         \"preset_id\",",
											"//         \"server\",",
											"//         \"static\",",
											"//         \"stream_status\",",
											"//         \"stream_url\",",
											"//         \"streamer_id\",",
											"//         \"substream_url\",",
											"//         \"thumbnails\",",
											"//         \"thumbnails_url\",",
											"//         \"title\",",
											"//         \"user_attributes\",",
											"//         \"video_only\",",
											"//         \"vision_alg\",",
											"//         \"vision_areas\",",
											"//         \"vision_enabled\",",
											"//         \"vision_gpu\"",
											"//     ],",
											"//     \"additionalProperties\": true,",
											"//     \"properties\": {",
											"//         \"agent_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_key\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_model\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_serial\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_status\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"comment\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"coordinates\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"dvr_depth\": {",
											"//             \"type\": \"number\"",
											"//         },",
											"//         \"dvr_lock_days\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"dvr_path\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"dvr_space\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"enabled\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"external_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"extrenal_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"folder_coordinates\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"folder_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"group_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"groups\": {",
											"//             \"type\": \"array\",",
											"//             \"additionalItems\": true,",
											"//             \"items\": {}",
											"//         },",
											"//         \"has_actions\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"last_change\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {}",
											"//         },",
											"//         \"last_event_time\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"motion_detector_enabled\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"name\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"onvif_profile\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"onvif_ptz\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"onvif_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"organization_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"permissions\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"view\",",
											"//                 \"edit\",",
											"//                 \"ptz\",",
											"//                 \"dvr\",",
											"//                 \"dvr_depth_limit\",",
											"//                 \"actions\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"view\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"edit\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"ptz\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"dvr\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"dvr_depth_limit\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"actions\": {",
											"//                     \"type\": \"boolean\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"playback_config\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"token\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"token\": {",
											"//                     \"type\": \"string\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"postal_address\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"precise_thumbnails_days\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"preset\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"domain_id\",",
											"//                 \"dvr_depth\",",
											"//                 \"dvr_lock_days\",",
											"//                 \"dvr_space\",",
											"//                 \"id\",",
											"//                 \"is_adjustable\",",
											"//                 \"is_default\",",
											"//                 \"is_deleted\",",
											"//                 \"precise_thumbnails_days\",",
											"//                 \"title\",",
											"//                 \"vision_alg\",",
											"//                 \"vision_areas\",",
											"//                 \"vision_enabled\",",
											"//                 \"vision_gpu\",",
											"//                 \"vision_params\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"domain_id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"dvr_depth\": {",
											"//                     \"type\": \"number\"",
											"//                 },",
											"//                 \"dvr_lock_days\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"dvr_space\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"is_adjustable\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"is_default\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"is_deleted\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"precise_thumbnails_days\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"title\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"vision_alg\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_areas\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_enabled\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_gpu\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_params\": {",
											"//                     \"type\": \"object\",",
											"//                     \"required\": [],",
											"//                     \"additionalProperties\": true,",
											"//                     \"properties\": {}",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"preset_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"server\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"static\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"stream_status\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"name\",",
											"//                 \"server\",",
											"//                 \"alive\",",
											"//                 \"lifetime\",",
											"//                 \"bitrate\",",
											"//                 \"source_error\",",
											"//                 \"http_port\",",
											"//                 \"https_port\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"name\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"server\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"alive\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"lifetime\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"bitrate\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"source_error\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"http_port\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"https_port\": {",
											"//                     \"type\": \"integer\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"stream_url\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"streamer_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"substream_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"thumbnails\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"thumbnails_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"title\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"user_attributes\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"favorite\",",
											"//                 \"motion_alarm\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"favorite\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"motion_alarm\": {",
											"//                     \"type\": \"boolean\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"video_only\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"vision_alg\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_areas\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_enabled\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_gpu\": {",
											"//             \"type\": \"null\"",
											"//         }",
											"//     }",
											"// }",
											"",
											"//     pm.test('Schema is valid', function () {",
											"//         var JsoneData=JSON.parse(responseBody);",
											"//         pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"//     });",
											"",
											"    pm.test(\"Проверка полей dvr_depth, dvr_lock_days, dvr_space, enabled, organization_id, name,  title и stream_url\", function () {",
											"        pm.expect(pm.response.json().dvr_depth).to.eql(1.0)",
											"        pm.expect(pm.response.json().dvr_lock_days).to.eql(2)",
											"        pm.expect(pm.response.json().dvr_space).to.eql(1)",
											"        pm.expect(pm.response.json().enabled).to.eql(true)",
											"        pm.expect(pm.response.json().organization_id).to.eql(Number(pm.environment.get(\"organizationId_flus\")))",
											"        pm.expect(pm.response.json().name).to.eql(\"3camera9-ATAT-4242-eto1-cameraATa777\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().stream_url).to.eql(\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\")",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [2000]);",
											"// // иначе не проходит проверка по схеме"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"stream_url\":\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\",\n\"organization_id\":{{organizationId_flus}},\n\"onvif_ptz\":true,\n\"dvr_space\":1,\n\"video_only\":\"false\",\n\"dvr_depth\":1,\n\"dvr_lock_days\":2,\n\"name\":\"3camera9-ATAT-4242-eto1-cameraATa777\",\n\"title\":\"ATc1a2m3era\",\n\"motion_detector_enabled\":true,\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras/3camera9-ATAT-4242-eto1-cameraATa777",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras",
										"3camera9-ATAT-4242-eto1-cameraATa777"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос камеры (Flussonic) (проверка обновления камеры)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.environment.set(\"cameraToken\", pm.response.json().playback_config.token);",
											"",
											"//    var schema =  {",
											"//     \"type\": \"object\",",
											"//     \"required\": [",
											"//         \"agent_id\",",
											"//         \"agent_key\",",
											"//         \"agent_model\",",
											"//         \"agent_serial\",",
											"//         \"agent_status\",",
											"//         \"comment\",",
											"//         \"coordinates\",",
											"//         \"dvr_depth\",",
											"//         \"dvr_lock_days\",",
											"//         \"dvr_path\",",
											"//         \"dvr_space\",",
											"//         \"enabled\",",
											"//         \"external_id\",",
											"//         \"extrenal_id\",",
											"//         \"folder_coordinates\",",
											"//         \"folder_id\",",
											"//         \"group_id\",",
											"//         \"groups\",",
											"//         \"has_actions\",",
											"//         \"last_change\",",
											"//         \"last_event_time\",",
											"//         \"motion_detector_enabled\",",
											"//         \"name\",",
											"//         \"onvif_profile\",",
											"//         \"onvif_ptz\",",
											"//         \"onvif_url\",",
											"//         \"organization_id\",",
											"//         \"permissions\",",
											"//         \"playback_config\",",
											"//         \"postal_address\",",
											"//         \"precise_thumbnails_days\",",
											"//         \"preset\",",
											"//         \"preset_id\",",
											"//         \"server\",",
											"//         \"static\",",
											"//         \"stream_status\",",
											"//         \"stream_url\",",
											"//         \"streamer_id\",",
											"//         \"substream_url\",",
											"//         \"thumbnails\",",
											"//         \"thumbnails_url\",",
											"//         \"title\",",
											"//         \"user_attributes\",",
											"//         \"video_only\",",
											"//         \"vision_alg\",",
											"//         \"vision_areas\",",
											"//         \"vision_enabled\",",
											"//         \"vision_gpu\"",
											"//     ],",
											"//     \"additionalProperties\": true,",
											"//     \"properties\": {",
											"//         \"agent_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_key\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_model\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_serial\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"agent_status\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"comment\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"coordinates\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"dvr_depth\": {",
											"//             \"type\": \"number\"",
											"//         },",
											"//         \"dvr_lock_days\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"dvr_path\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"dvr_space\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"enabled\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"external_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"extrenal_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"folder_coordinates\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"folder_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"group_id\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"groups\": {",
											"//             \"type\": \"array\",",
											"//             \"additionalItems\": true,",
											"//             \"items\": {}",
											"//         },",
											"//         \"has_actions\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"last_change\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {}",
											"//         },",
											"//         \"last_event_time\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"motion_detector_enabled\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"name\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"onvif_profile\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"onvif_ptz\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"onvif_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"organization_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"permissions\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"view\",",
											"//                 \"edit\",",
											"//                 \"ptz\",",
											"//                 \"dvr\",",
											"//                 \"dvr_depth_limit\",",
											"//                 \"actions\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"view\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"edit\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"ptz\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"dvr\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"dvr_depth_limit\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"actions\": {",
											"//                     \"type\": \"boolean\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"playback_config\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"token\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"token\": {",
											"//                     \"type\": \"string\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"postal_address\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"precise_thumbnails_days\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"preset\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"domain_id\",",
											"//                 \"dvr_depth\",",
											"//                 \"dvr_lock_days\",",
											"//                 \"dvr_space\",",
											"//                 \"id\",",
											"//                 \"is_adjustable\",",
											"//                 \"is_default\",",
											"//                 \"is_deleted\",",
											"//                 \"precise_thumbnails_days\",",
											"//                 \"title\",",
											"//                 \"vision_alg\",",
											"//                 \"vision_areas\",",
											"//                 \"vision_enabled\",",
											"//                 \"vision_gpu\",",
											"//                 \"vision_params\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"domain_id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"dvr_depth\": {",
											"//                     \"type\": \"number\"",
											"//                 },",
											"//                 \"dvr_lock_days\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"dvr_space\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"id\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"is_adjustable\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"is_default\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"is_deleted\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"precise_thumbnails_days\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"title\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"vision_alg\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_areas\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_enabled\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_gpu\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"vision_params\": {",
											"//                     \"type\": \"object\",",
											"//                     \"required\": [],",
											"//                     \"additionalProperties\": true,",
											"//                     \"properties\": {}",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"preset_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"server\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"static\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"stream_status\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"name\",",
											"//                 \"server\",",
											"//                 \"alive\",",
											"//                 \"lifetime\",",
											"//                 \"bitrate\",",
											"//                 \"source_error\",",
											"//                 \"http_port\",",
											"//                 \"https_port\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"name\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"server\": {",
											"//                     \"type\": \"string\"",
											"//                 },",
											"//                 \"alive\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"lifetime\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"bitrate\": {",
											"//                     \"type\": \"integer\"",
											"//                 },",
											"//                 \"source_error\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"http_port\": {",
											"//                     \"type\": \"null\"",
											"//                 },",
											"//                 \"https_port\": {",
											"//                     \"type\": \"integer\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"stream_url\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"streamer_id\": {",
											"//             \"type\": \"integer\"",
											"//         },",
											"//         \"substream_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"thumbnails\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"thumbnails_url\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"title\": {",
											"//             \"type\": \"string\"",
											"//         },",
											"//         \"user_attributes\": {",
											"//             \"type\": \"object\",",
											"//             \"required\": [",
											"//                 \"favorite\",",
											"//                 \"motion_alarm\"",
											"//             ],",
											"//             \"additionalProperties\": true,",
											"//             \"properties\": {",
											"//                 \"favorite\": {",
											"//                     \"type\": \"boolean\"",
											"//                 },",
											"//                 \"motion_alarm\": {",
											"//                     \"type\": \"boolean\"",
											"//                 }",
											"//             }",
											"//         },",
											"//         \"video_only\": {",
											"//             \"type\": \"boolean\"",
											"//         },",
											"//         \"vision_alg\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_areas\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_enabled\": {",
											"//             \"type\": \"null\"",
											"//         },",
											"//         \"vision_gpu\": {",
											"//             \"type\": \"null\"",
											"//         }",
											"//     }",
											"// }",
											"",
											"//     pm.test('Schema is valid', function () {",
											"//         var JsoneData=JSON.parse(responseBody);",
											"//         pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"//     });",
											"",
											"    pm.test(\"Проверка полей dvr_depth, dvr_lock_days, dvr_space, enabled, organization_id, name,  title, stream_url \", function () {",
											"        pm.expect(pm.response.json().dvr_depth).to.eql(1.0)",
											"        pm.expect(pm.response.json().dvr_lock_days).to.eql(2)",
											"        pm.expect(pm.response.json().dvr_space).to.eql(1)",
											"        pm.expect(pm.response.json().enabled).to.eql(true)",
											"        pm.expect(pm.response.json().organization_id).to.eql(Number(pm.environment.get(\"organizationId_flus\")))",
											"        pm.expect(pm.response.json().name).to.eql(\"3camera9-ATAT-4242-eto1-cameraATa777\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().stream_url).to.eql(\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\")",
											"        pm.expect(pm.response.json().onvif_ptz).to.eql(true)",
											"",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [2000]);",
											"// // иначе не проходит проверка по схеме"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras/3camera9-ATAT-4242-eto1-cameraATa777",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras",
										"3camera9-ATAT-4242-eto1-cameraATa777"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ссылка на скриншот с камеры (Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    setTimeout(function(){}, [6000]);    ",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проверка Content-Type в headers\", function () {",
											"        pm.expect( pm.response.headers.get('Content-Type')).to.eql(\"video/mp4\")",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [15000]);",
											"setTimeout(function(){}, [6000]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{flussonic_api_key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "X-Vsaas-Api-Key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/3camera9-ATAT-4242-eto1-cameraATa777/preview.mp4?token={{cameraToken}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"3camera9-ATAT-4242-eto1-cameraATa777",
										"preview.mp4"
									],
									"query": [
										{
											"key": "token",
											"value": "{{cameraToken}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Поиск пользователя (на платформу)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.environment.set(\"res\", JSON.stringify(pm.response.json()));",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/flussonic/users/find?login=ATc1a2m3era",
									"host": [
										"{{host}}"
									],
									"path": [
										"flussonic",
										"users",
										"find"
									],
									"query": [
										{
											"key": "login",
											"value": "ATc1a2m3era"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Синхронизовать пользователя  Flussonic с пользователем платформы (запрос на платформу)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// try{",
											"// var url = pm.globals.get(\"host\") + \"/flussonic/users/find?login=ATc1a2m3era\";",
											"// var Au = \"Bearer \" + pm.environment.get(\"access_token\");",
											"// const preRequest = {",
											"//   url : url,",
											"//   method: 'GET',",
											"//   header: {",
											"//     'Authorization':  Au,",
											"//     \"Content-Type\": \"application/json\"",
											"//     }",
											"// };",
											"// pm.sendRequest(preRequest, function (err, response) {",
											"//     let res = response.json();",
											"//     res = JSON.stringify(res);",
											"//     pm.environment.set(\"res\", res);    ",
											"// });",
											"// setTimeout(function(){}, [500]);",
											"// }",
											"// catch(e)",
											"// {",
											"//     console.log(e)",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{res}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/flussonic/users/synchronize?userId={{id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"flussonic",
										"users",
										"synchronize"
									],
									"query": [
										{
											"key": "userId",
											"value": "{{id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление пользователя флуссоника с сохранением данных на флуссонике. (запрос на платформу)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"    var schema = {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"userId\",",
											"            \"flussonicUserId\",",
											"            \"canEditOrganizations\",",
											"            \"canViewOrganizations\",",
											"            \"canEditSettings\",",
											"            \"enabled\",",
											"            \"organizations\",",
											"            \"canAddAgentCamera\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"userId\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"flussonicUserId\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"canEditOrganizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"canViewOrganizations\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"canEditSettings\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"enabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"organizations\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"canAddAgentCamera\": {",
											"                \"type\": \"boolean\"",
											"            }",
											"        }",
											"    };",
											"    ",
											"    var JsoneData = JSON.parse(responseBody);",
											"    pm.test('Schema is valid', function () {        ",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"    pm.test(\"Проверка изменяемого поля(canAddAgentCamera), а также userId и flussonicUserId, а также настроек (поля canEditOrganizations, canViewOrganizations, canEditSettings, enabled) и отсутствия organizations\",  () => {",
											"        pm.expect(pm.response.json().canAddAgentCamera).to.be.eql(true);",
											"        pm.expect(pm.response.json().userId).to.be.eql(pm.environment.get(\"id\"));",
											"        pm.expect(pm.response.json().flussonicUserId).to.be.eql(Number(pm.environment.get(\"flussonicUserId\")));",
											"        // pm.expect(pm.response.json().sessionId).to.be.eql(pm.environment.get(\"session_id_flus_user\"));",
											"        pm.expect(pm.response.json().canEditOrganizations).to.be.eql(true);",
											"        pm.expect(pm.response.json().canViewOrganizations).to.be.eql(true);",
											"        pm.expect(pm.response.json().canEditSettings).to.be.eql(true);",
											"        pm.expect(pm.response.json().enabled).to.be.eql(true);",
											"        pm.expect(pm.response.json().organizations).to.be.eql(null);",
											"        ",
											"    });",
											"    ",
											"",
											"} ",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"{{userId_f}}\",\n    \"flussonicUserId\": {{flussonicUserId}},\n    \"canEditOrganizations\": true,\n    \"canViewOrganizations\": true,\n    \"canEditSettings\": true,\n    \"enabled\": true,\n    \"canAddAgentCamera\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/flussonic/users/{{id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"flussonic",
										"users",
										"{{id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "changeLimit  2 (запрос на платформу)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newLimit\": 2,\n  \"platformType\": \"FLUSSONIC\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/administration/video/cameras/limit/{{id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"administration",
										"video",
										"cameras",
										"limit",
										"{{id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение всех домов пользователя (для дома с flus) (запрос на платформу)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try {",
											"",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    for (let i = 0; i < pm.response.json().length; i++){",
											"        if (pm.response.json()[i].title === \"ATc1a2m3era_organization\")",
											"            pm.environment.set(\"ATc1a2m3era_organization\", pm.response.json()[i].id);",
											"    }  ",
											"",
											"} ",
											"catch(e) {",
											"    // выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ACCESS_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/houses",
									"host": [
										"{{host}}"
									],
									"path": [
										"houses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generating a QR code to add a flussonic camera. ( на платформу)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.environment.set(\"QR\", pm.response.text().slice(pm.response.text().indexOf('\\n', 13) + 7) );",
											"pm.test(\"Проверка корректности QR кода\",  () => {",
											"var name_and_password = \"name\\npassword\" + pm.response.text().slice(pm.response.text().indexOf('\\n', 13));",
											"for(let key in pm.response.text()) {        ",
											"    pm.expect(pm.response.text()[key]).to.equal(name_and_password[key]);    ",
											"}",
											"});",
											"}",
											"catch(e){",
											"    console.log(e)",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ACCESS_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"houseId\": \"{{ATc1a2m3era_organization}}\",\n  \"title\": \"string\",\n  \"wifiName\": \"name\",\n  \"wifiPassword\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/video/cameras/flussonic/generateQr",
									"host": [
										"{{host}}"
									],
									"path": [
										"video",
										"cameras",
										"flussonic",
										"generateQr"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление камеры с прошивкой флуссоник-агент ИРИС, генерация qr-кода для добавления камеры (3 способ добавления камер) (Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    var schema = {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"token\",",
											"            \"valid_till\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"token\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"valid_till\": {",
											"                \"type\": \"integer\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"organization_id\":{{organizationId_flus}},\n\"title\":\"QRcameraAT\",\n\"static\":true,\n\"preset_id\":1,\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/agent-activation-tokens",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"agent-activation-tokens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Активация qr-кода (Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"token\",",
											"            \"valid_till\",",
											"            \"camera_name\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"token\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"valid_till\": {",
											"                \"type\": \"integer\"",
											"            },",
											"            \"camera_name\": {",
											"                \"type\": \"null\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"    pm.test(\"Проверка поля token\", function () {",
											"        pm.expect(pm.response.json().token).to.equal(pm.environment.get(\"QR\"));   ",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/agent-activation-tokens/{{QR}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"agent-activation-tokens",
										"{{QR}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Поиск камер по agentId (2 способ добавления камер)(Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проверка количества обнаруженных камер (должно быть 0)\", function () {",
											"        pm.expect( pm.response.json().length).to.eql(0)",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras?agent=true&search=123321",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras"
									],
									"query": [
										{
											"key": "agent",
											"value": "true"
										},
										{
											"key": "search",
											"value": "123321"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Управление событиями у камер на временной шкале (Flussonic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проверка наличия id в ответе\", function () {",
											"        pm.expect( pm.response.json().length).to.eql(1)",
											"        pm.expect( typeof(pm.response.json()[0])).to.eql(\"string\")",
											"        ",
											"    });",
											"    ",
											"    var schema =  {",
											"        \"type\": \"array\",",
											"        \"additionalItems\": true,",
											"        \"items\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"camera_id\":\"3camera9-ATAT-4242-eto1-cameraATa777\",\n\"type\":\"motion\",\n\"start_at\":1647494080,\n\"end_at\":1647494081\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/events",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Перемещение камеры из одного дома в другой  (на платформу)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Проверка полей id,title, houseId,rtspStream,platformType,videoOnly, ptz,status,enabled,dvrDepth, dvrSpace, dvrLockDays, motionDetectorEnabled, agentId и token\", function () {",
											"        pm.expect( pm.response.json().id).to.eql(\"3camera9-ATAT-4242-eto1-cameraATa777\");",
											"        pm.expect( pm.response.json().title).to.eql(\"ATc1a2m3era\");",
											"        pm.expect( pm.response.json().houseId).to.eql(pm.environment.get(\"houseId\"));",
											"        pm.expect( pm.response.json().rtspStream).to.eql(\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\");",
											"        pm.expect( pm.response.json().platformType).to.eql(\"FLUSSONIC\");",
											"        pm.expect( pm.response.json().videoOnly).to.eql(false);",
											"        pm.expect( pm.response.json().ptz).to.eql(true);",
											"        // pm.expect( pm.response.json().status).to.eql(\"ONLINE\");",
											"        pm.expect( pm.response.json().enabled).to.eql(true);",
											"        pm.expect( pm.response.json().dvr.dvrDepth).to.eql(1);",
											"        pm.expect( pm.response.json().dvr.dvrSpace).to.eql(1);",
											"        pm.expect( pm.response.json().dvr.dvrLockDays).to.eql(2);",
											"        pm.expect( pm.response.json().motionDetectorEnabled).to.eql(true);",
											"        pm.expect( pm.response.json().agentId).to.eql(null);",
											"        pm.expect(typeof(pm.response.json().token)).to.eql(\"string\");   ",
											"        pm.expect(pm.response.json().token).to.not.eql(pm.environment.get(\"cameraToken\"));   ",
											"    });",
											"    ",
											"    var schema =  {",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"            \"id\",",
											"            \"title\",",
											"            \"houseId\",",
											"            \"rtspStream\",",
											"            \"platformType\",",
											"            \"videoOnly\",",
											"            \"ptz\",",
											"            \"streamUrl\",",
											"            \"status\",",
											"            \"deviceLocation\",",
											"            \"enabled\",",
											"            \"dvr\",",
											"            \"motionDetectorEnabled\",",
											"            \"agentId\",",
											"            \"token\",",
											"            \"motionDelay\"",
											"        ],",
											"        \"additionalProperties\": true,",
											"        \"properties\": {",
											"            \"id\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"houseId\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"rtspStream\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"platformType\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"videoOnly\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"ptz\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"streamUrl\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"status\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"deviceLocation\": {",
											"                \"type\": \"array\",",
											"                \"additionalItems\": true,",
											"                \"items\": {}",
											"            },",
											"            \"enabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"dvr\": {",
											"                \"type\": \"object\",",
											"                \"required\": [",
											"                    \"dvrDepth\",",
											"                    \"dvrSpace\",",
											"                    \"dvrLockDays\"",
											"                ],",
											"                \"additionalProperties\": true,",
											"                \"properties\": {",
											"                    \"dvrDepth\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"dvrSpace\": {",
											"                        \"type\": \"integer\"",
											"                    },",
											"                    \"dvrLockDays\": {",
											"                        \"type\": \"integer\"",
											"                    }",
											"                }",
											"            },",
											"            \"motionDetectorEnabled\": {",
											"                \"type\": \"boolean\"",
											"            },",
											"            \"agentId\": {",
											"                \"type\": \"null\"",
											"            },",
											"            \"token\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"motionDelay\": {",
											"                \"type\": \"null\"",
											"            }",
											"        }",
											"    }",
											"",
											"    pm.test('Schema is valid', function () {",
											"        var JsoneData=JSON.parse(responseBody);",
											"        pm.expect(tv4.validate(JsoneData, schema)).to.be.true;",
											"    });",
											"",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ACCESS_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/video/cameras/flussonic/move/3camera9-ATAT-4242-eto1-cameraATa777?houseId={{houseId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"video",
										"cameras",
										"flussonic",
										"move",
										"3camera9-ATAT-4242-eto1-cameraATa777"
									],
									"query": [
										{
											"key": "houseId",
											"value": "{{houseId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос камеры (Flussonic) (проверка обновления камеры) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.environment.set(\"cameraToken\", pm.response.json().playback_config.token);",
											"",
											"    pm.test(\"Проверка полей dvr_depth, dvr_lock_days, dvr_space, enabled, organization_id, name,  title, stream_url \", function () {",
											"        pm.expect(pm.response.json().dvr_depth).to.eql(1.0)",
											"        pm.expect(pm.response.json().dvr_lock_days).to.eql(2)",
											"        pm.expect(pm.response.json().dvr_space).to.eql(1)",
											"        pm.expect(pm.response.json().enabled).to.eql(true)",
											"        pm.expect(pm.response.json().organization_id).to.not.eql(Number(pm.environment.get(\"organizationId_flus\")))",
											"        pm.expect(pm.response.json().name).to.eql(\"3camera9-ATAT-4242-eto1-cameraATa777\")",
											"        pm.expect(pm.response.json().title).to.eql(\"ATc1a2m3era\")",
											"        pm.expect(pm.response.json().stream_url).to.eql(\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\")",
											"        pm.expect(pm.response.json().onvif_ptz).to.eql(true)",
											"",
											"    });",
											"",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function(){}, [2000]);",
											"// // иначе не проходит проверка по схеме"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras/3camera9-ATAT-4242-eto1-cameraATa777",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras",
										"3camera9-ATAT-4242-eto1-cameraATa777"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление камеры",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"success = true ?\", function () {",
											"        pm.expect(pm.response.json().success).to.eql(true)       ",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus_user}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\"stream_url\":\"rtsp://10.25.200.50:554/H264?ch=1&subtype=0&proto=Onvif\",\n\"organization_id\":{{organizationId_flus}},\n\"onvif_ptz\":false,\n\"dvr_space\":1,\n\"video_only\":\"false\",\n\"dvr_depth\":1,\n\"dvr_lock_days\":1,\n\"name\":\"3camera9-bbce-4241-eto1-cameraATa895\",\n\"title\":\"ATc1a2m3era\",\n\"motion_detector_enabled\":true,\n\"enabled\":true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/cameras/3camera9-ATAT-4242-eto1-cameraATa777",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"cameras",
										"3camera9-ATAT-4242-eto1-cameraATa777"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление организации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"success = true ?\", function () {",
											"        pm.expect(pm.response.json().success).to.eql(true)       ",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "force",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/organizations/{{organizationId_flus}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"organizations",
										"{{organizationId_flus}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление пользователя с Flussonic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"try{",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"    pm.test(\"success = true ?\", function () {",
											"        pm.expect(pm.response.json().success).to.eql(true)       ",
											"    });",
											"}",
											"catch(e)",
											"{",
											"// выводим исключение в консоль",
											"    console.log(e);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{session_id_flus}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-vsaas-session",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{flussonic_url}}/vsaas/api/v2/users/{{flussonicUserId}}",
									"host": [
										"{{flussonic_url}}"
									],
									"path": [
										"vsaas",
										"api",
										"v2",
										"users",
										"{{flussonicUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "удалить пользователя с платформы",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Пользователь удален (код 204)\", function () {",
											"    pm.expect(pm.response.code).to.equal(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/users/{{id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"{{id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ACCESS_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}